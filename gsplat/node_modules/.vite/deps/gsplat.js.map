{
  "version": 3,
  "sources": ["../../gsplat/src/math/Vector3.ts", "../../gsplat/src/math/Quaternion.ts", "../../gsplat/src/events/EventDispatcher.ts", "../../gsplat/src/math/Matrix4.ts", "../../gsplat/src/events/Events.ts", "../../gsplat/src/core/Object3D.ts", "../../gsplat/src/math/Matrix3.ts", "../../gsplat/src/splats/SplatData.ts", "../../gsplat/src/splats/Splat.ts", "../../gsplat/src/cameras/CameraData.ts", "../../gsplat/src/math/Vector4.ts", "../../gsplat/src/cameras/Camera.ts", "../../gsplat/src/core/Scene.ts", "../../gsplat/src/loaders/Loader.ts", "../../gsplat/src/loaders/PLYLoader.ts", "../../gsplat/src/renderers/webgl/programs/ShaderProgram.ts", "../../gsplat/src/wasm/data.js", "../../gsplat/src/renderers/webgl/utils/RenderData.ts", "../../gsplat/src/math/Color32.ts", "../../gsplat/src/renderers/webgl/programs/RenderProgram.ts", "../../gsplat/src/renderers/webgl/passes/FadeInPass.ts", "../../gsplat/src/renderers/WebGLRenderer.ts", "../../gsplat/src/controls/OrbitControls.ts", "../../gsplat/src/math/Plane.ts", "../../gsplat/src/renderers/webgl/passes/ShaderPass.ts", "../../gsplat/src/wasm/intersect.js", "../../gsplat/src/renderers/webgl/utils/IntersectionTester.ts"],
  "sourcesContent": ["import { Matrix4 } from \"./Matrix4\";\n\nclass Vector3 {\n    public readonly x: number;\n    public readonly y: number;\n    public readonly z: number;\n\n    constructor(x: number = 0, y: number = 0, z: number = 0) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n\n    equals(v: Vector3): boolean {\n        if (this.x !== v.x) {\n            return false;\n        }\n        if (this.y !== v.y) {\n            return false;\n        }\n        if (this.z !== v.z) {\n            return false;\n        }\n\n        return true;\n    }\n\n    add(v: number): Vector3;\n    add(v: Vector3): Vector3;\n    add(v: number | Vector3): Vector3 {\n        if (typeof v === \"number\") {\n            return new Vector3(this.x + v, this.y + v, this.z + v);\n        } else {\n            return new Vector3(this.x + v.x, this.y + v.y, this.z + v.z);\n        }\n    }\n\n    subtract(v: number): Vector3;\n    subtract(v: Vector3): Vector3;\n    subtract(v: number | Vector3): Vector3 {\n        if (typeof v === \"number\") {\n            return new Vector3(this.x - v, this.y - v, this.z - v);\n        } else {\n            return new Vector3(this.x - v.x, this.y - v.y, this.z - v.z);\n        }\n    }\n\n    multiply(v: number): Vector3;\n    multiply(v: Vector3): Vector3;\n    multiply(v: Matrix4): Vector3;\n    multiply(v: number | Vector3 | Matrix4): Vector3 {\n        if (typeof v === \"number\") {\n            return new Vector3(this.x * v, this.y * v, this.z * v);\n        } else if (v instanceof Vector3) {\n            return new Vector3(this.x * v.x, this.y * v.y, this.z * v.z);\n        } else {\n            return new Vector3(\n                this.x * v.buffer[0] + this.y * v.buffer[4] + this.z * v.buffer[8] + v.buffer[12],\n                this.x * v.buffer[1] + this.y * v.buffer[5] + this.z * v.buffer[9] + v.buffer[13],\n                this.x * v.buffer[2] + this.y * v.buffer[6] + this.z * v.buffer[10] + v.buffer[14],\n            );\n        }\n    }\n\n    cross(v: Vector3): Vector3 {\n        const x = this.y * v.z - this.z * v.y;\n        const y = this.z * v.x - this.x * v.z;\n        const z = this.x * v.y - this.y * v.x;\n\n        return new Vector3(x, y, z);\n    }\n\n    dot(v: Vector3): number {\n        return this.x * v.x + this.y * v.y + this.z * v.z;\n    }\n\n    lerp(v: Vector3, t: number): Vector3 {\n        return new Vector3(this.x + (v.x - this.x) * t, this.y + (v.y - this.y) * t, this.z + (v.z - this.z) * t);\n    }\n\n    magnitude(): number {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n\n    distanceTo(v: Vector3): number {\n        return Math.sqrt((this.x - v.x) ** 2 + (this.y - v.y) ** 2 + (this.z - v.z) ** 2);\n    }\n\n    normalize(): Vector3 {\n        const length = this.magnitude();\n\n        return new Vector3(this.x / length, this.y / length, this.z / length);\n    }\n\n    flat(): number[] {\n        return [this.x, this.y, this.z];\n    }\n\n    clone(): Vector3 {\n        return new Vector3(this.x, this.y, this.z);\n    }\n\n    toString(): string {\n        return `[${this.flat().join(\", \")}]`;\n    }\n\n    static One(value: number = 1): Vector3 {\n        return new Vector3(value, value, value);\n    }\n}\n\nexport { Vector3 };\n", "import { Matrix3 } from \"./Matrix3\";\nimport { Vector3 } from \"./Vector3\";\n\nclass Quaternion {\n    public readonly x: number;\n    public readonly y: number;\n    public readonly z: number;\n    public readonly w: number;\n\n    constructor(x: number = 0, y: number = 0, z: number = 0, w: number = 1) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n    }\n\n    equals(q: Quaternion): boolean {\n        if (this.x !== q.x) {\n            return false;\n        }\n        if (this.y !== q.y) {\n            return false;\n        }\n        if (this.z !== q.z) {\n            return false;\n        }\n        if (this.w !== q.w) {\n            return false;\n        }\n\n        return true;\n    }\n\n    normalize(): Quaternion {\n        const l = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n        return new Quaternion(this.x / l, this.y / l, this.z / l, this.w / l);\n    }\n\n    multiply(q: Quaternion): Quaternion {\n        const w1 = this.w,\n            x1 = this.x,\n            y1 = this.y,\n            z1 = this.z;\n        const w2 = q.w,\n            x2 = q.x,\n            y2 = q.y,\n            z2 = q.z;\n\n        return new Quaternion(\n            w1 * x2 + x1 * w2 + y1 * z2 - z1 * y2,\n            w1 * y2 - x1 * z2 + y1 * w2 + z1 * x2,\n            w1 * z2 + x1 * y2 - y1 * x2 + z1 * w2,\n            w1 * w2 - x1 * x2 - y1 * y2 - z1 * z2,\n        );\n    }\n\n    inverse(): Quaternion {\n        const l = this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n        return new Quaternion(-this.x / l, -this.y / l, -this.z / l, this.w / l);\n    }\n\n    apply(v: Vector3): Vector3 {\n        const vecQuat = new Quaternion(v.x, v.y, v.z, 0);\n        const conjugate = new Quaternion(-this.x, -this.y, -this.z, this.w);\n        const rotatedQuat = this.multiply(vecQuat).multiply(conjugate);\n        return new Vector3(rotatedQuat.x, rotatedQuat.y, rotatedQuat.z);\n    }\n\n    flat(): number[] {\n        return [this.x, this.y, this.z, this.w];\n    }\n\n    clone(): Quaternion {\n        return new Quaternion(this.x, this.y, this.z, this.w);\n    }\n\n    static FromEuler(e: Vector3): Quaternion {\n        const halfX = e.x / 2;\n        const halfY = e.y / 2;\n        const halfZ = e.z / 2;\n        const cy = Math.cos(halfY);\n        const sy = Math.sin(halfY);\n        const cp = Math.cos(halfX);\n        const sp = Math.sin(halfX);\n        const cz = Math.cos(halfZ);\n        const sz = Math.sin(halfZ);\n\n        const q = new Quaternion(\n            cy * sp * cz + sy * cp * sz,\n            sy * cp * cz - cy * sp * sz,\n            cy * cp * sz - sy * sp * cz,\n            cy * cp * cz + sy * sp * sz,\n        );\n        return q;\n    }\n\n    toEuler(): Vector3 {\n        const sinr_cosp = 2 * (this.w * this.x + this.y * this.z);\n        const cosr_cosp = 1 - 2 * (this.x * this.x + this.y * this.y);\n        const x = Math.atan2(sinr_cosp, cosr_cosp);\n\n        let y;\n        const sinp = 2 * (this.w * this.y - this.z * this.x);\n        if (Math.abs(sinp) >= 1) {\n            y = (Math.sign(sinp) * Math.PI) / 2;\n        } else {\n            y = Math.asin(sinp);\n        }\n\n        const siny_cosp = 2 * (this.w * this.z + this.x * this.y);\n        const cosy_cosp = 1 - 2 * (this.y * this.y + this.z * this.z);\n        const z = Math.atan2(siny_cosp, cosy_cosp);\n\n        return new Vector3(x, y, z);\n    }\n\n    static FromMatrix3(matrix: Matrix3): Quaternion {\n        const m = matrix.buffer;\n        const trace = m[0] + m[4] + m[8];\n        let x, y, z, w;\n        if (trace > 0) {\n            const s = 0.5 / Math.sqrt(trace + 1.0);\n            w = 0.25 / s;\n            x = (m[7] - m[5]) * s;\n            y = (m[2] - m[6]) * s;\n            z = (m[3] - m[1]) * s;\n        } else if (m[0] > m[4] && m[0] > m[8]) {\n            const s = 2.0 * Math.sqrt(1.0 + m[0] - m[4] - m[8]);\n            w = (m[7] - m[5]) / s;\n            x = 0.25 * s;\n            y = (m[1] + m[3]) / s;\n            z = (m[2] + m[6]) / s;\n        } else if (m[4] > m[8]) {\n            const s = 2.0 * Math.sqrt(1.0 + m[4] - m[0] - m[8]);\n            w = (m[2] - m[6]) / s;\n            x = (m[1] + m[3]) / s;\n            y = 0.25 * s;\n            z = (m[5] + m[7]) / s;\n        } else {\n            const s = 2.0 * Math.sqrt(1.0 + m[8] - m[0] - m[4]);\n            w = (m[3] - m[1]) / s;\n            x = (m[2] + m[6]) / s;\n            y = (m[5] + m[7]) / s;\n            z = 0.25 * s;\n        }\n        return new Quaternion(x, y, z, w);\n    }\n\n    static FromAxisAngle(axis: Vector3, angle: number): Quaternion {\n        const halfAngle = angle / 2;\n        const sin = Math.sin(halfAngle);\n        const cos = Math.cos(halfAngle);\n        return new Quaternion(axis.x * sin, axis.y * sin, axis.z * sin, cos);\n    }\n\n    toString(): string {\n        return `[${this.flat().join(\", \")}]`;\n    }\n}\n\nexport { Quaternion };\n", "class EventDispatcher {\n    addEventListener: (type: string, listener: (event: Event) => void) => void;\n    removeEventListener: (type: string, listener: (event: Event) => void) => void;\n    hasEventListener: (type: string, listener: (event: Event) => void) => boolean;\n    dispatchEvent: (event: Event) => void;\n\n    constructor() {\n        const listeners = new Map<string, Set<(event: Event) => void>>();\n\n        this.addEventListener = (type: string, listener: (event: Event) => void) => {\n            if (!listeners.has(type)) {\n                listeners.set(type, new Set());\n            }\n\n            listeners.get(type)!.add(listener);\n        };\n\n        this.removeEventListener = (type: string, listener: (event: Event) => void) => {\n            if (!listeners.has(type)) {\n                return;\n            }\n\n            listeners.get(type)!.delete(listener);\n        };\n\n        this.hasEventListener = (type: string, listener: (event: Event) => void) => {\n            if (!listeners.has(type)) {\n                return false;\n            }\n\n            return listeners.get(type)!.has(listener);\n        };\n\n        this.dispatchEvent = (event: Event) => {\n            if (!listeners.has(event.type)) {\n                return;\n            }\n\n            for (const listener of listeners.get(event.type)!) {\n                listener(event);\n            }\n        };\n    }\n}\n\nexport { EventDispatcher };\n", "import { Quaternion } from \"./Quaternion\";\nimport { Vector3 } from \"./Vector3\";\n\nclass Matrix4 {\n    public readonly buffer: number[];\n\n    // prettier-ignore\n    constructor(n11: number = 1, n12: number = 0, n13: number = 0, n14: number = 0, \n                n21: number = 0, n22: number = 1, n23: number = 0, n24: number = 0, \n                n31: number = 0, n32: number = 0, n33: number = 1, n34: number = 0, \n                n41: number = 0, n42: number = 0, n43: number = 0, n44: number = 1) {\n        this.buffer = [\n            n11, n12, n13, n14, \n            n21, n22, n23, n24, \n            n31, n32, n33, n34, \n            n41, n42, n43, n44\n        ];\n    }\n\n    equals(m: Matrix4): boolean {\n        if (this.buffer.length !== m.buffer.length) {\n            return false;\n        }\n        if (this.buffer === m.buffer) {\n            return true;\n        }\n        for (let i = 0; i < this.buffer.length; i++) {\n            if (this.buffer[i] !== m.buffer[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    multiply(m: Matrix4): Matrix4 {\n        const a = this.buffer;\n        const b = m.buffer;\n        return new Matrix4(\n            b[0] * a[0] + b[1] * a[4] + b[2] * a[8] + b[3] * a[12],\n            b[0] * a[1] + b[1] * a[5] + b[2] * a[9] + b[3] * a[13],\n            b[0] * a[2] + b[1] * a[6] + b[2] * a[10] + b[3] * a[14],\n            b[0] * a[3] + b[1] * a[7] + b[2] * a[11] + b[3] * a[15],\n            b[4] * a[0] + b[5] * a[4] + b[6] * a[8] + b[7] * a[12],\n            b[4] * a[1] + b[5] * a[5] + b[6] * a[9] + b[7] * a[13],\n            b[4] * a[2] + b[5] * a[6] + b[6] * a[10] + b[7] * a[14],\n            b[4] * a[3] + b[5] * a[7] + b[6] * a[11] + b[7] * a[15],\n            b[8] * a[0] + b[9] * a[4] + b[10] * a[8] + b[11] * a[12],\n            b[8] * a[1] + b[9] * a[5] + b[10] * a[9] + b[11] * a[13],\n            b[8] * a[2] + b[9] * a[6] + b[10] * a[10] + b[11] * a[14],\n            b[8] * a[3] + b[9] * a[7] + b[10] * a[11] + b[11] * a[15],\n            b[12] * a[0] + b[13] * a[4] + b[14] * a[8] + b[15] * a[12],\n            b[12] * a[1] + b[13] * a[5] + b[14] * a[9] + b[15] * a[13],\n            b[12] * a[2] + b[13] * a[6] + b[14] * a[10] + b[15] * a[14],\n            b[12] * a[3] + b[13] * a[7] + b[14] * a[11] + b[15] * a[15],\n        );\n    }\n\n    clone(): Matrix4 {\n        const e = this.buffer;\n        // prettier-ignore\n        return new Matrix4(\n            e[0], e[1], e[2], e[3], \n            e[4], e[5], e[6], e[7], \n            e[8], e[9], e[10], e[11], \n            e[12], e[13], e[14], e[15]\n        );\n    }\n\n    determinant(): number {\n        const e = this.buffer;\n        // prettier-ignore\n        return (\n            e[12] * e[9] * e[6] * e[3] - e[8] * e[13] * e[6] * e[3] - e[12] * e[5] * e[10] * e[3] + e[4] * e[13] * e[10] * e[3] +\n            e[8] * e[5] * e[14] * e[3] - e[4] * e[9] * e[14] * e[3] - e[12] * e[9] * e[2] * e[7] + e[8] * e[13] * e[2] * e[7] +\n            e[12] * e[1] * e[10] * e[7] - e[0] * e[13] * e[10] * e[7] - e[8] * e[1] * e[14] * e[7] + e[0] * e[9] * e[14] * e[7] +\n            e[12] * e[5] * e[2] * e[11] - e[4] * e[13] * e[2] * e[11] - e[12] * e[1] * e[6] * e[11] + e[0] * e[13] * e[6] * e[11] +\n            e[4] * e[1] * e[14] * e[11] - e[0] * e[5] * e[14] * e[11] - e[8] * e[5] * e[2] * e[15] + e[4] * e[9] * e[2] * e[15] +\n            e[8] * e[1] * e[6] * e[15] - e[0] * e[9] * e[6] * e[15] - e[4] * e[1] * e[10] * e[15] + e[0] * e[5] * e[10] * e[15]\n        );\n    }\n\n    invert(): Matrix4 {\n        const e = this.buffer;\n        const det = this.determinant();\n        if (det === 0) {\n            throw new Error(\"Matrix is not invertible.\");\n        }\n        const invDet = 1 / det;\n        // prettier-ignore\n        return new Matrix4(\n            invDet * (\n                e[5] * e[10] * e[15] - e[5] * e[11] * e[14] - e[9] * e[6] * e[15] + e[9] * e[7] * e[14] + e[13] * e[6] * e[11] - e[13] * e[7] * e[10]\n            ),\n            invDet * (\n                -e[1] * e[10] * e[15] + e[1] * e[11] * e[14] + e[9] * e[2] * e[15] - e[9] * e[3] * e[14] - e[13] * e[2] * e[11] + e[13] * e[3] * e[10]\n            ),\n            invDet * (\n                e[1] * e[6] * e[15] - e[1] * e[7] * e[14] - e[5] * e[2] * e[15] + e[5] * e[3] * e[14] + e[13] * e[2] * e[7] - e[13] * e[3] * e[6]\n            ),\n            invDet * (\n                -e[1] * e[6] * e[11] + e[1] * e[7] * e[10] + e[5] * e[2] * e[11] - e[5] * e[3] * e[10] - e[9] * e[2] * e[7] + e[9] * e[3] * e[6]\n            ),\n            invDet * (\n                -e[4] * e[10] * e[15] + e[4] * e[11] * e[14] + e[8] * e[6] * e[15] - e[8] * e[7] * e[14] - e[12] * e[6] * e[11] + e[12] * e[7] * e[10]\n            ),\n            invDet * (\n                e[0] * e[10] * e[15] - e[0] * e[11] * e[14] - e[8] * e[2] * e[15] + e[8] * e[3] * e[14] + e[12] * e[2] * e[11] - e[12] * e[3] * e[10]\n            ),\n            invDet * (\n                -e[0] * e[6] * e[15] + e[0] * e[7] * e[14] + e[4] * e[2] * e[15] - e[4] * e[3] * e[14] - e[12] * e[2] * e[7] + e[12] * e[3] * e[6]\n            ),\n            invDet * (\n                e[0] * e[6] * e[11] - e[0] * e[7] * e[10] - e[4] * e[2] * e[11] + e[4] * e[3] * e[10] + e[8] * e[2] * e[7] - e[8] * e[3] * e[6]\n            ),\n            invDet * (\n                e[4] * e[9] * e[15] - e[4] * e[11] * e[13] - e[8] * e[5] * e[15] + e[8] * e[7] * e[13] + e[12] * e[5] * e[11] - e[12] * e[7] * e[9]\n            ),\n            invDet * (\n                -e[0] * e[9] * e[15] + e[0] * e[11] * e[13] + e[8] * e[1] * e[15] - e[8] * e[3] * e[13] - e[12] * e[1] * e[11] + e[12] * e[3] * e[9]\n            ),\n            invDet * (\n                e[0] * e[5] * e[15] - e[0] * e[7] * e[13] - e[4] * e[1] * e[15] + e[4] * e[3] * e[13] + e[12] * e[1] * e[7] - e[12] * e[3] * e[5]\n            ),\n            invDet * (\n                -e[0] * e[5] * e[11] + e[0] * e[7] * e[9] + e[4] * e[1] * e[11] - e[4] * e[3] * e[9] - e[8] * e[1] * e[7] + e[8] * e[3] * e[5]\n            ),\n            invDet * (\n                -e[4] * e[9] * e[14] + e[4] * e[10] * e[13] + e[8] * e[5] * e[14] - e[8] * e[6] * e[13] - e[12] * e[5] * e[10] + e[12] * e[6] * e[9]\n            ),\n            invDet * (\n                e[0] * e[9] * e[14] - e[0] * e[10] * e[13] - e[8] * e[1] * e[14] + e[8] * e[2] * e[13] + e[12] * e[1] * e[10] - e[12] * e[2] * e[9]\n            ),\n            invDet * (\n                -e[0] * e[5] * e[14] + e[0] * e[6] * e[13] + e[4] * e[1] * e[14] - e[4] * e[2] * e[13] - e[12] * e[1] * e[6] + e[12] * e[2] * e[5]\n            ),\n            invDet * (\n                e[0] * e[5] * e[10] - e[0] * e[6] * e[9] - e[4] * e[1] * e[10] + e[4] * e[2] * e[9] + e[8] * e[1] * e[6] - e[8] * e[2] * e[5]\n            ),\n        );\n    }\n\n    static Compose(position: Vector3, rotation: Quaternion, scale: Vector3): Matrix4 {\n        const x = rotation.x,\n            y = rotation.y,\n            z = rotation.z,\n            w = rotation.w;\n        const x2 = x + x,\n            y2 = y + y,\n            z2 = z + z;\n        const xx = x * x2,\n            xy = x * y2,\n            xz = x * z2;\n        const yy = y * y2,\n            yz = y * z2,\n            zz = z * z2;\n        const wx = w * x2,\n            wy = w * y2,\n            wz = w * z2;\n        const sx = scale.x,\n            sy = scale.y,\n            sz = scale.z;\n        // prettier-ignore\n        return new Matrix4(\n            (1 - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n            (xy - wz) * sy, (1 - (xx + zz)) * sy, (yz + wx) * sy, 0,\n            (xz + wy) * sz, (yz - wx) * sz, (1 - (xx + yy)) * sz, 0,\n            position.x, position.y, position.z, 1\n        );\n    }\n\n    toString(): string {\n        return `[${this.buffer.join(\", \")}]`;\n    }\n}\n\nexport { Matrix4 };\n", "import { Object3D } from \"../core/Object3D\";\n\nclass ObjectAddedEvent extends Event {\n    constructor(public object: Object3D) {\n        super(\"objectAdded\");\n    }\n}\n\nclass ObjectRemovedEvent extends Event {\n    constructor(public object: Object3D) {\n        super(\"objectRemoved\");\n    }\n}\n\nclass ObjectChangedEvent extends Event {\n    constructor(public object: Object3D) {\n        super(\"objectChanged\");\n    }\n}\n\nexport { ObjectAddedEvent, ObjectRemovedEvent, ObjectChangedEvent };\n", "import { Vector3 } from \"../math/Vector3\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { EventDispatcher } from \"../events/EventDispatcher\";\nimport { Matrix4 } from \"../math/Matrix4\";\nimport { ObjectChangedEvent } from \"../events/Events\";\n\nabstract class Object3D extends EventDispatcher {\n    public positionChanged: boolean = false;\n    public rotationChanged: boolean = false;\n    public scaleChanged: boolean = false;\n\n    protected _position: Vector3 = new Vector3();\n    protected _rotation: Quaternion = new Quaternion();\n    protected _scale: Vector3 = new Vector3(1, 1, 1);\n    protected _transform: Matrix4 = new Matrix4();\n\n    protected _changeEvent = new ObjectChangedEvent(this);\n\n    update: () => void;\n    applyPosition: () => void;\n    applyRotation: () => void;\n    applyScale: () => void;\n\n    constructor() {\n        super();\n\n        this.update = () => {};\n\n        this.applyPosition = () => {\n            this.position = new Vector3();\n        };\n\n        this.applyRotation = () => {\n            this.rotation = new Quaternion();\n        };\n\n        this.applyScale = () => {\n            this.scale = new Vector3(1, 1, 1);\n        };\n    }\n\n    protected _updateMatrix() {\n        this._transform = Matrix4.Compose(this._position, this._rotation, this._scale);\n    }\n\n    get position() {\n        return this._position;\n    }\n\n    set position(position: Vector3) {\n        if (!this._position.equals(position)) {\n            this._position = position;\n            this.positionChanged = true;\n            this._updateMatrix();\n            this.dispatchEvent(this._changeEvent);\n        }\n    }\n\n    get rotation() {\n        return this._rotation;\n    }\n\n    set rotation(rotation: Quaternion) {\n        if (!this._rotation.equals(rotation)) {\n            this._rotation = rotation;\n            this.rotationChanged = true;\n            this._updateMatrix();\n            this.dispatchEvent(this._changeEvent);\n        }\n    }\n\n    get scale() {\n        return this._scale;\n    }\n\n    set scale(scale: Vector3) {\n        if (!this._scale.equals(scale)) {\n            this._scale = scale;\n            this.scaleChanged = true;\n            this._updateMatrix();\n            this.dispatchEvent(this._changeEvent);\n        }\n    }\n\n    get forward() {\n        let forward = new Vector3(0, 0, 1);\n        forward = this.rotation.apply(forward);\n        return forward;\n    }\n\n    get transform() {\n        return this._transform;\n    }\n}\n\nexport { Object3D };\n", "import { Quaternion } from \"./Quaternion\";\nimport type { Vector3 } from \"./Vector3\";\n\nclass Matrix3 {\n    public readonly buffer: number[];\n\n    // prettier-ignore\n    constructor(n11: number = 1, n12: number = 0, n13: number = 0,\n                n21: number = 0, n22: number = 1, n23: number = 0,\n                n31: number = 0, n32: number = 0, n33: number = 1) {\n        this.buffer = [\n            n11, n12, n13,\n            n21, n22, n23,\n            n31, n32, n33\n        ];\n    }\n\n    equals(m: Matrix3): boolean {\n        if (this.buffer.length !== m.buffer.length) {\n            return false;\n        }\n        if (this.buffer === m.buffer) {\n            return true;\n        }\n        for (let i = 0; i < this.buffer.length; i++) {\n            if (this.buffer[i] !== m.buffer[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    multiply(v: Matrix3): Matrix3 {\n        const a = this.buffer;\n        const b = v.buffer;\n        return new Matrix3(\n            b[0] * a[0] + b[3] * a[1] + b[6] * a[2],\n            b[1] * a[0] + b[4] * a[1] + b[7] * a[2],\n            b[2] * a[0] + b[5] * a[1] + b[8] * a[2],\n            b[0] * a[3] + b[3] * a[4] + b[6] * a[5],\n            b[1] * a[3] + b[4] * a[4] + b[7] * a[5],\n            b[2] * a[3] + b[5] * a[4] + b[8] * a[5],\n            b[0] * a[6] + b[3] * a[7] + b[6] * a[8],\n            b[1] * a[6] + b[4] * a[7] + b[7] * a[8],\n            b[2] * a[6] + b[5] * a[7] + b[8] * a[8],\n        );\n    }\n\n    clone(): Matrix3 {\n        const e = this.buffer;\n        // prettier-ignore\n        return new Matrix3(\n            e[0], e[1], e[2],\n            e[3], e[4], e[5],\n            e[6], e[7], e[8]\n        );\n    }\n\n    static Eye(v: number = 1): Matrix3 {\n        return new Matrix3(v, 0, 0, 0, v, 0, 0, 0, v);\n    }\n\n    static Diagonal(v: Vector3): Matrix3 {\n        return new Matrix3(v.x, 0, 0, 0, v.y, 0, 0, 0, v.z);\n    }\n\n    static RotationFromQuaternion(q: Quaternion): Matrix3 {\n        const matrix = new Matrix3(\n            1 - 2 * q.y * q.y - 2 * q.z * q.z,\n            2 * q.x * q.y - 2 * q.z * q.w,\n            2 * q.x * q.z + 2 * q.y * q.w,\n            2 * q.x * q.y + 2 * q.z * q.w,\n            1 - 2 * q.x * q.x - 2 * q.z * q.z,\n            2 * q.y * q.z - 2 * q.x * q.w,\n            2 * q.x * q.z - 2 * q.y * q.w,\n            2 * q.y * q.z + 2 * q.x * q.w,\n            1 - 2 * q.x * q.x - 2 * q.y * q.y,\n        );\n        return matrix;\n    }\n\n    static RotationFromEuler(m: Vector3): Matrix3 {\n        const cx = Math.cos(m.x);\n        const sx = Math.sin(m.x);\n        const cy = Math.cos(m.y);\n        const sy = Math.sin(m.y);\n        const cz = Math.cos(m.z);\n        const sz = Math.sin(m.z);\n\n        const rotationMatrix = [\n            cy * cz + sy * sx * sz,\n            -cy * sz + sy * sx * cz,\n            sy * cx,\n            cx * sz,\n            cx * cz,\n            -sx,\n            -sy * cz + cy * sx * sz,\n            sy * sz + cy * sx * cz,\n            cy * cx,\n        ];\n\n        return new Matrix3(...rotationMatrix);\n    }\n\n    toString(): string {\n        return `[${this.buffer.join(\", \")}]`;\n    }\n}\n\nexport { Matrix3 };\n", "import { Vector3 } from \"../math/Vector3\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { Matrix3 } from \"../math/Matrix3\";\n\nclass SplatData {\n    static RowLength = 3 * 4 + 3 * 4 + 4 + 4;\n\n    public changed = false;\n    public detached = false;\n\n    private _vertexCount: number;\n    private _positions: Float32Array;\n    private _rotations: Float32Array;\n    private _scales: Float32Array;\n    private _colors: Uint8Array;\n    private _selection: Uint8Array;\n\n    translate: (translation: Vector3) => void;\n    rotate: (rotation: Quaternion) => void;\n    scale: (scale: Vector3) => void;\n    serialize: () => Uint8Array;\n    reattach: (\n        positions: ArrayBufferLike,\n        rotations: ArrayBufferLike,\n        scales: ArrayBufferLike,\n        colors: ArrayBufferLike,\n        selection: ArrayBufferLike,\n    ) => void;\n\n    constructor(\n        vertexCount: number = 0,\n        positions: Float32Array | null = null,\n        rotations: Float32Array | null = null,\n        scales: Float32Array | null = null,\n        colors: Uint8Array | null = null,\n    ) {\n        this._vertexCount = vertexCount;\n        this._positions = positions || new Float32Array(0);\n        this._rotations = rotations || new Float32Array(0);\n        this._scales = scales || new Float32Array(0);\n        this._colors = colors || new Uint8Array(0);\n        this._selection = new Uint8Array(this.vertexCount);\n\n        this.translate = (translation: Vector3) => {\n            for (let i = 0; i < this.vertexCount; i++) {\n                this.positions[3 * i + 0] += translation.x;\n                this.positions[3 * i + 1] += translation.y;\n                this.positions[3 * i + 2] += translation.z;\n            }\n\n            this.changed = true;\n        };\n\n        this.rotate = (rotation: Quaternion) => {\n            const R = Matrix3.RotationFromQuaternion(rotation).buffer;\n            for (let i = 0; i < this.vertexCount; i++) {\n                const x = this.positions[3 * i + 0];\n                const y = this.positions[3 * i + 1];\n                const z = this.positions[3 * i + 2];\n\n                this.positions[3 * i + 0] = R[0] * x + R[1] * y + R[2] * z;\n                this.positions[3 * i + 1] = R[3] * x + R[4] * y + R[5] * z;\n                this.positions[3 * i + 2] = R[6] * x + R[7] * y + R[8] * z;\n\n                const currentRotation = new Quaternion(\n                    this.rotations[4 * i + 1],\n                    this.rotations[4 * i + 2],\n                    this.rotations[4 * i + 3],\n                    this.rotations[4 * i + 0],\n                );\n\n                const newRot = rotation.multiply(currentRotation);\n                this.rotations[4 * i + 1] = newRot.x;\n                this.rotations[4 * i + 2] = newRot.y;\n                this.rotations[4 * i + 3] = newRot.z;\n                this.rotations[4 * i + 0] = newRot.w;\n            }\n\n            this.changed = true;\n        };\n\n        this.scale = (scale: Vector3) => {\n            for (let i = 0; i < this.vertexCount; i++) {\n                this.positions[3 * i + 0] *= scale.x;\n                this.positions[3 * i + 1] *= scale.y;\n                this.positions[3 * i + 2] *= scale.z;\n\n                this.scales[3 * i + 0] *= scale.x;\n                this.scales[3 * i + 1] *= scale.y;\n                this.scales[3 * i + 2] *= scale.z;\n            }\n\n            this.changed = true;\n        };\n\n        this.serialize = () => {\n            const data = new Uint8Array(this.vertexCount * SplatData.RowLength);\n\n            const f_buffer = new Float32Array(data.buffer);\n            const u_buffer = new Uint8Array(data.buffer);\n\n            for (let i = 0; i < this.vertexCount; i++) {\n                f_buffer[8 * i + 0] = this.positions[3 * i + 0];\n                f_buffer[8 * i + 1] = this.positions[3 * i + 1];\n                f_buffer[8 * i + 2] = this.positions[3 * i + 2];\n\n                u_buffer[32 * i + 24 + 0] = this.colors[4 * i + 0];\n                u_buffer[32 * i + 24 + 1] = this.colors[4 * i + 1];\n                u_buffer[32 * i + 24 + 2] = this.colors[4 * i + 2];\n                u_buffer[32 * i + 24 + 3] = this.colors[4 * i + 3];\n\n                f_buffer[8 * i + 3 + 0] = this.scales[3 * i + 0];\n                f_buffer[8 * i + 3 + 1] = this.scales[3 * i + 1];\n                f_buffer[8 * i + 3 + 2] = this.scales[3 * i + 2];\n\n                u_buffer[32 * i + 28 + 0] = (this.rotations[4 * i + 0] * 128 + 128) & 0xff;\n                u_buffer[32 * i + 28 + 1] = (this.rotations[4 * i + 1] * 128 + 128) & 0xff;\n                u_buffer[32 * i + 28 + 2] = (this.rotations[4 * i + 2] * 128 + 128) & 0xff;\n                u_buffer[32 * i + 28 + 3] = (this.rotations[4 * i + 3] * 128 + 128) & 0xff;\n            }\n\n            return data;\n        };\n\n        this.reattach = (\n            positions: ArrayBufferLike,\n            rotations: ArrayBufferLike,\n            scales: ArrayBufferLike,\n            colors: ArrayBufferLike,\n            selection: ArrayBufferLike,\n        ) => {\n            console.assert(\n                positions.byteLength === this.vertexCount * 3 * 4,\n                `Expected ${this.vertexCount * 3 * 4} bytes, got ${positions.byteLength} bytes`,\n            );\n            this._positions = new Float32Array(positions);\n            this._rotations = new Float32Array(rotations);\n            this._scales = new Float32Array(scales);\n            this._colors = new Uint8Array(colors);\n            this._selection = new Uint8Array(selection);\n            this.detached = false;\n        };\n    }\n\n    static Deserialize(data: Uint8Array): SplatData {\n        const vertexCount = data.length / SplatData.RowLength;\n        const positions = new Float32Array(3 * vertexCount);\n        const rotations = new Float32Array(4 * vertexCount);\n        const scales = new Float32Array(3 * vertexCount);\n        const colors = new Uint8Array(4 * vertexCount);\n\n        const f_buffer = new Float32Array(data.buffer);\n        const u_buffer = new Uint8Array(data.buffer);\n\n        for (let i = 0; i < vertexCount; i++) {\n            positions[3 * i + 0] = f_buffer[8 * i + 0];\n            positions[3 * i + 1] = f_buffer[8 * i + 1];\n            positions[3 * i + 2] = f_buffer[8 * i + 2];\n\n            rotations[4 * i + 0] = (u_buffer[32 * i + 28 + 0] - 128) / 128;\n            rotations[4 * i + 1] = (u_buffer[32 * i + 28 + 1] - 128) / 128;\n            rotations[4 * i + 2] = (u_buffer[32 * i + 28 + 2] - 128) / 128;\n            rotations[4 * i + 3] = (u_buffer[32 * i + 28 + 3] - 128) / 128;\n\n            scales[3 * i + 0] = f_buffer[8 * i + 3 + 0];\n            scales[3 * i + 1] = f_buffer[8 * i + 3 + 1];\n            scales[3 * i + 2] = f_buffer[8 * i + 3 + 2];\n\n            colors[4 * i + 0] = u_buffer[32 * i + 24 + 0];\n            colors[4 * i + 1] = u_buffer[32 * i + 24 + 1];\n            colors[4 * i + 2] = u_buffer[32 * i + 24 + 2];\n            colors[4 * i + 3] = u_buffer[32 * i + 24 + 3];\n        }\n\n        return new SplatData(vertexCount, positions, rotations, scales, colors);\n    }\n\n    get vertexCount() {\n        return this._vertexCount;\n    }\n\n    get positions() {\n        return this._positions;\n    }\n\n    get rotations() {\n        return this._rotations;\n    }\n\n    get scales() {\n        return this._scales;\n    }\n\n    get colors() {\n        return this._colors;\n    }\n\n    get selection() {\n        return this._selection;\n    }\n}\n\nexport { SplatData };\n", "import { SplatData } from \"./SplatData\";\nimport { Object3D } from \"../core/Object3D\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Quaternion } from \"../math/Quaternion\";\n\nclass Splat extends Object3D {\n    public selectedChanged: boolean = false;\n\n    private _data: SplatData;\n    private _selected: boolean = false;\n\n    constructor(splat: SplatData | undefined = undefined) {\n        super();\n\n        this._data = splat || new SplatData();\n\n        this.applyPosition = () => {\n            this.data.translate(this.position);\n            this.position = new Vector3();\n        };\n\n        this.applyRotation = () => {\n            this.data.rotate(this.rotation);\n            this.rotation = new Quaternion();\n        };\n\n        this.applyScale = () => {\n            this.data.scale(this.scale);\n            this.scale = new Vector3(1, 1, 1);\n        };\n    }\n\n    saveToFile(name: string | null = null) {\n        if (!document) return;\n\n        if (!name) {\n            const now = new Date();\n            name = `splat-${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}.splat`;\n        }\n\n        this.applyRotation();\n        this.applyScale();\n        this.applyPosition();\n\n        const buffer = this.data.serialize();\n        const blob = new Blob([buffer], { type: \"application/octet-stream\" });\n        const link = document.createElement(\"a\");\n        link.download = name;\n        link.href = URL.createObjectURL(blob);\n        link.click();\n    }\n\n    get data() {\n        return this._data;\n    }\n\n    get selected() {\n        return this._selected;\n    }\n\n    set selected(selected: boolean) {\n        if (this._selected !== selected) {\n            this._selected = selected;\n            this.selectedChanged = true;\n            this.dispatchEvent(this._changeEvent);\n        }\n    }\n}\n\nexport { Splat };\n", "import { Quaternion } from \"../math/Quaternion\";\nimport { Matrix3 } from \"../math/Matrix3\";\nimport { Matrix4 } from \"../math/Matrix4\";\nimport { Vector3 } from \"../math/Vector3\";\n\nclass CameraData {\n    private _fx: number = 1132;\n    private _fy: number = 1132;\n    private _near: number = 0.1;\n    private _far: number = 100;\n\n    private _width: number = 512;\n    private _height: number = 512;\n\n    private _projectionMatrix: Matrix4 = new Matrix4();\n    private _viewMatrix: Matrix4 = new Matrix4();\n    private _viewProj: Matrix4 = new Matrix4();\n\n    update: (position: Vector3, rotation: Quaternion) => void;\n    setSize: (width: number, height: number) => void;\n\n    private _updateProjectionMatrix: () => void;\n\n    constructor() {\n        this._updateProjectionMatrix = () => {\n            // prettier-ignore\n            this._projectionMatrix = new Matrix4(\n                2 * this.fx / this.width, 0, 0, 0,\n                0, -2 * this.fy / this.height, 0, 0,\n                0, 0, this.far / (this.far - this.near), 1,\n                0, 0, -(this.far * this.near) / (this.far - this.near), 0\n            );\n\n            this._viewProj = this.projectionMatrix.multiply(this.viewMatrix);\n        };\n\n        this.update = (position: Vector3, rotation: Quaternion) => {\n            const R = Matrix3.RotationFromQuaternion(rotation).buffer;\n            const t = position.flat();\n\n            // prettier-ignore\n            this._viewMatrix = new Matrix4(\n                R[0], R[1], R[2], 0,\n                R[3], R[4], R[5], 0,\n                R[6], R[7], R[8], 0,\n                -t[0] * R[0] - t[1] * R[3] - t[2] * R[6],\n                -t[0] * R[1] - t[1] * R[4] - t[2] * R[7],\n                -t[0] * R[2] - t[1] * R[5] - t[2] * R[8],\n                1,\n            );\n\n            this._viewProj = this.projectionMatrix.multiply(this.viewMatrix);\n        };\n\n        this.setSize = (width: number, height: number) => {\n            this._width = width;\n            this._height = height;\n            this._updateProjectionMatrix();\n        };\n    }\n\n    get fx() {\n        return this._fx;\n    }\n\n    set fx(fx: number) {\n        if (this._fx !== fx) {\n            this._fx = fx;\n            this._updateProjectionMatrix();\n        }\n    }\n\n    get fy() {\n        return this._fy;\n    }\n\n    set fy(fy: number) {\n        if (this._fy !== fy) {\n            this._fy = fy;\n            this._updateProjectionMatrix();\n        }\n    }\n\n    get near() {\n        return this._near;\n    }\n\n    set near(near: number) {\n        if (this._near !== near) {\n            this._near = near;\n            this._updateProjectionMatrix();\n        }\n    }\n\n    get far() {\n        return this._far;\n    }\n\n    set far(far: number) {\n        if (this._far !== far) {\n            this._far = far;\n            this._updateProjectionMatrix();\n        }\n    }\n\n    get width() {\n        return this._width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    get projectionMatrix() {\n        return this._projectionMatrix;\n    }\n\n    get viewMatrix() {\n        return this._viewMatrix;\n    }\n\n    get viewProj() {\n        return this._viewProj;\n    }\n}\n\nexport { CameraData };\n", "import { Matrix4 } from \"./Matrix4\";\n\nclass Vector4 {\n    public readonly x: number;\n    public readonly y: number;\n    public readonly z: number;\n    public readonly w: number;\n\n    constructor(x: number = 0, y: number = 0, z: number = 0, w: number = 0) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n    }\n\n    equals(v: Vector4): boolean {\n        if (this.x !== v.x) {\n            return false;\n        }\n        if (this.y !== v.y) {\n            return false;\n        }\n        if (this.z !== v.z) {\n            return false;\n        }\n        if (this.w !== v.w) {\n            return false;\n        }\n\n        return true;\n    }\n\n    add(v: number): Vector4;\n    add(v: Vector4): Vector4;\n    add(v: number | Vector4): Vector4 {\n        if (typeof v === \"number\") {\n            return new Vector4(this.x + v, this.y + v, this.z + v, this.w + v);\n        } else {\n            return new Vector4(this.x + v.x, this.y + v.y, this.z + v.z, this.w + v.w);\n        }\n    }\n\n    subtract(v: number): Vector4;\n    subtract(v: Vector4): Vector4;\n    subtract(v: number | Vector4): Vector4 {\n        if (typeof v === \"number\") {\n            return new Vector4(this.x - v, this.y - v, this.z - v, this.w - v);\n        } else {\n            return new Vector4(this.x - v.x, this.y - v.y, this.z - v.z, this.w - v.w);\n        }\n    }\n\n    multiply(v: number): Vector4;\n    multiply(v: Vector4): Vector4;\n    multiply(v: Matrix4): Vector4;\n    multiply(v: number | Vector4 | Matrix4): Vector4 {\n        if (typeof v === \"number\") {\n            return new Vector4(this.x * v, this.y * v, this.z * v, this.w * v);\n        } else if (v instanceof Vector4) {\n            return new Vector4(this.x * v.x, this.y * v.y, this.z * v.z, this.w * v.w);\n        } else {\n            return new Vector4(\n                this.x * v.buffer[0] + this.y * v.buffer[4] + this.z * v.buffer[8] + this.w * v.buffer[12],\n                this.x * v.buffer[1] + this.y * v.buffer[5] + this.z * v.buffer[9] + this.w * v.buffer[13],\n                this.x * v.buffer[2] + this.y * v.buffer[6] + this.z * v.buffer[10] + this.w * v.buffer[14],\n                this.x * v.buffer[3] + this.y * v.buffer[7] + this.z * v.buffer[11] + this.w * v.buffer[15],\n            );\n        }\n    }\n\n    dot(v: Vector4): number {\n        return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n    }\n\n    lerp(v: Vector4, t: number): Vector4 {\n        return new Vector4(\n            this.x + (v.x - this.x) * t,\n            this.y + (v.y - this.y) * t,\n            this.z + (v.z - this.z) * t,\n            this.w + (v.w - this.w) * t,\n        );\n    }\n\n    magnitude(): number {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n    }\n\n    distanceTo(v: Vector4): number {\n        return Math.sqrt((this.x - v.x) ** 2 + (this.y - v.y) ** 2 + (this.z - v.z) ** 2 + (this.w - v.w) ** 2);\n    }\n\n    normalize(): Vector4 {\n        const length = this.magnitude();\n\n        return new Vector4(this.x / length, this.y / length, this.z / length, this.w / length);\n    }\n\n    flat(): number[] {\n        return [this.x, this.y, this.z, this.w];\n    }\n\n    clone(): Vector4 {\n        return new Vector4(this.x, this.y, this.z, this.w);\n    }\n\n    toString(): string {\n        return `[${this.flat().join(\", \")}]`;\n    }\n}\n\nexport { Vector4 };\n", "import { CameraData } from \"./CameraData\";\nimport { Object3D } from \"../core/Object3D\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Vector4 } from \"../math/Vector4\";\n\nclass Camera extends Object3D {\n    private _data: CameraData;\n\n    screenPointToRay: (x: number, y: number) => Vector3;\n\n    constructor(camera: CameraData | undefined = undefined) {\n        super();\n\n        this._data = camera ? camera : new CameraData();\n        this._position = new Vector3(0, 0, -5);\n\n        this.update = () => {\n            this.data.update(this.position, this.rotation);\n        };\n\n        this.screenPointToRay = (x: number, y: number) => {\n            const clipSpaceCoords = new Vector4(x, y, -1, 1);\n            const inverseProjectionMatrix = this._data.projectionMatrix.invert();\n            const cameraSpaceCoords = clipSpaceCoords.multiply(inverseProjectionMatrix);\n            const inverseViewMatrix = this._data.viewMatrix.invert();\n            const worldSpaceCoords = cameraSpaceCoords.multiply(inverseViewMatrix);\n            const worldSpacePosition = new Vector3(\n                worldSpaceCoords.x / worldSpaceCoords.w,\n                worldSpaceCoords.y / worldSpaceCoords.w,\n                worldSpaceCoords.z / worldSpaceCoords.w,\n            );\n            const direction = worldSpacePosition.subtract(this.position).normalize();\n            return direction;\n        };\n    }\n\n    get data() {\n        return this._data;\n    }\n}\n\nexport { Camera };\n", "import { Object3D } from \"./Object3D\";\nimport { SplatData } from \"../splats/SplatData\";\nimport { Splat } from \"../splats/Splat\";\nimport { EventDispatcher } from \"../events/EventDispatcher\";\nimport { ObjectAddedEvent, ObjectRemovedEvent } from \"../events/Events\";\n\nclass Scene extends EventDispatcher {\n    private _objects: Object3D[] = [];\n\n    addObject: (object: Object3D) => void;\n    removeObject: (object: Object3D) => void;\n    findObject: (predicate: (object: Object3D) => boolean) => Object3D | undefined;\n    findObjectOfType: <T extends Object3D>(type: { new (): T }) => T | undefined;\n    reset: () => void;\n\n    constructor() {\n        super();\n\n        this.addObject = (object: Object3D) => {\n            this.objects.push(object);\n            this.dispatchEvent(new ObjectAddedEvent(object));\n        };\n\n        this.removeObject = (object: Object3D) => {\n            const index = this.objects.indexOf(object);\n            if (index < 0) {\n                throw new Error(\"Object not found in scene\");\n            }\n            this.objects.splice(index, 1);\n            this.dispatchEvent(new ObjectRemovedEvent(object));\n        };\n\n        this.findObject = (predicate: (object: Object3D) => boolean) => {\n            for (const object of this.objects) {\n                if (predicate(object)) {\n                    return object;\n                }\n            }\n            return undefined;\n        };\n\n        this.findObjectOfType = <T extends Object3D>(type: { new (): T }) => {\n            for (const object of this.objects) {\n                if (object instanceof type) {\n                    return object;\n                }\n            }\n            return undefined;\n        };\n\n        this.reset = () => {\n            const objectsToRemove = this.objects.slice();\n            for (const object of objectsToRemove) {\n                this.removeObject(object);\n            }\n        };\n\n        this.reset();\n    }\n\n    saveToFile(name: string | null = null) {\n        if (!document) return;\n\n        if (!name) {\n            const now = new Date();\n            name = `scene-${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}.splat`;\n        }\n\n        const buffers: Uint8Array[] = [];\n        let vertexCount = 0;\n\n        for (const object of this.objects) {\n            object.applyRotation();\n            object.applyScale();\n            object.applyPosition();\n            if (object instanceof Splat) {\n                const buffer = object.data.serialize();\n                buffers.push(buffer);\n                vertexCount += object.data.vertexCount;\n            }\n        }\n\n        const data = new Uint8Array(vertexCount * SplatData.RowLength);\n        let offset = 0;\n        for (const buffer of buffers) {\n            data.set(buffer, offset);\n            offset += buffer.length;\n        }\n\n        const blob = new Blob([data.buffer], { type: \"application/octet-stream\" });\n        const link = document.createElement(\"a\");\n        link.download = name;\n        link.href = URL.createObjectURL(blob);\n        link.click();\n    }\n\n    get objects() {\n        return this._objects;\n    }\n}\n\nexport { Scene };\n", "import type { Scene } from \"../core/Scene\";\nimport { Splat } from \"../splats/Splat\";\nimport { SplatData } from \"../splats/SplatData\";\n\nclass Loader {\n    static async LoadAsync(\n        url: string,\n        scene: Scene,\n        onProgress?: (progress: number) => void,\n        useCache: boolean = false,\n    ): Promise<Splat> {\n        const req = await fetch(url, {\n            mode: \"cors\",\n            credentials: \"omit\",\n            cache: useCache ? \"force-cache\" : \"default\",\n        });\n\n        if (req.status != 200) {\n            throw new Error(req.status + \" Unable to load \" + req.url);\n        }\n\n        const reader = req.body!.getReader();\n        const contentLength = parseInt(req.headers.get(\"content-length\") as string);\n        const buffer = new Uint8Array(contentLength);\n\n        let bytesRead = 0;\n\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            const { done, value } = await reader.read();\n            if (done) break;\n\n            buffer.set(value, bytesRead);\n            bytesRead += value.length;\n\n            onProgress?.(bytesRead / contentLength);\n        }\n\n        const data = SplatData.Deserialize(buffer);\n        const splat = new Splat(data);\n        scene.addObject(splat);\n        return splat;\n    }\n\n    static async LoadFromFileAsync(file: File, scene: Scene, onProgress?: (progress: number) => void): Promise<Splat> {\n        const reader = new FileReader();\n        let splat = new Splat();\n        reader.onload = (e) => {\n            const buffer = new Uint8Array(e.target!.result as ArrayBuffer);\n            const data = SplatData.Deserialize(buffer);\n            splat = new Splat(data);\n            scene.addObject(splat);\n        };\n        reader.onprogress = (e) => {\n            onProgress?.(e.loaded / e.total);\n        };\n        reader.readAsArrayBuffer(file);\n        await new Promise<void>((resolve) => {\n            reader.onloadend = () => {\n                resolve();\n            };\n        });\n        return splat;\n    }\n}\n\nexport { Loader };\n", "import { Scene } from \"../core/Scene\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { SplatData } from \"../splats/SplatData\";\nimport { Splat } from \"../splats/Splat\";\n\nclass PLYLoader {\n    static SH_C0 = 0.28209479177387814;\n\n    static async LoadAsync(\n        url: string,\n        scene: Scene,\n        onProgress?: (progress: number) => void,\n        format: string = \"\",\n        useCache: boolean = false,\n    ): Promise<Splat> {\n        const req = await fetch(url, {\n            mode: \"cors\",\n            credentials: \"omit\",\n            cache: useCache ? \"force-cache\" : \"default\",\n        });\n\n        if (req.status != 200) {\n            throw new Error(req.status + \" Unable to load \" + req.url);\n        }\n\n        const reader = req.body!.getReader();\n        const contentLength = parseInt(req.headers.get(\"content-length\") as string);\n        const plyData = new Uint8Array(contentLength);\n\n        let bytesRead = 0;\n\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            const { done, value } = await reader.read();\n            if (done) break;\n\n            plyData.set(value, bytesRead);\n            bytesRead += value.length;\n\n            onProgress?.(bytesRead / contentLength);\n        }\n\n        if (plyData[0] !== 112 || plyData[1] !== 108 || plyData[2] !== 121 || plyData[3] !== 10) {\n            throw new Error(\"Invalid PLY file\");\n        }\n\n        const buffer = new Uint8Array(this._ParsePLYBuffer(plyData.buffer, format));\n        const data = SplatData.Deserialize(buffer);\n        const splat = new Splat(data);\n        scene.addObject(splat);\n        return splat;\n    }\n\n    static async LoadFromFileAsync(\n        file: File,\n        scene: Scene,\n        onProgress?: (progress: number) => void,\n        format: string = \"\",\n    ): Promise<Splat> {\n        const reader = new FileReader();\n        let splat = new Splat();\n        reader.onload = (e) => {\n            const buffer = new Uint8Array(this._ParsePLYBuffer(e.target!.result as ArrayBuffer, format));\n            const data = SplatData.Deserialize(buffer);\n            splat = new Splat(data);\n            scene.addObject(splat);\n        };\n        reader.onprogress = (e) => {\n            onProgress?.(e.loaded / e.total);\n        };\n        reader.readAsArrayBuffer(file);\n        await new Promise<void>((resolve) => {\n            reader.onloadend = () => {\n                resolve();\n            };\n        });\n        return splat;\n    }\n\n    private static _ParsePLYBuffer(inputBuffer: ArrayBuffer, format: string): ArrayBuffer {\n        type PlyProperty = {\n            name: string;\n            type: string;\n            offset: number;\n        };\n\n        const ubuf = new Uint8Array(inputBuffer);\n        const headerText = new TextDecoder().decode(ubuf.slice(0, 1024 * 10));\n        const header_end = \"end_header\\n\";\n        const header_end_index = headerText.indexOf(header_end);\n        if (header_end_index < 0) throw new Error(\"Unable to read .ply file header\");\n\n        const vertexCount = parseInt(/element vertex (\\d+)\\n/.exec(headerText)![1]);\n\n        let rowOffset = 0;\n        const offsets: Record<string, number> = {\n            double: 8,\n            int: 4,\n            uint: 4,\n            float: 4,\n            short: 2,\n            ushort: 2,\n            uchar: 1,\n        };\n\n        const properties: PlyProperty[] = [];\n        for (const prop of headerText\n            .slice(0, header_end_index)\n            .split(\"\\n\")\n            .filter((k) => k.startsWith(\"property \"))) {\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            const [_p, type, name] = prop.split(\" \");\n            properties.push({ name, type, offset: rowOffset });\n            if (!offsets[type]) throw new Error(`Unsupported property type: ${type}`);\n            rowOffset += offsets[type];\n        }\n\n        const dataView = new DataView(inputBuffer, header_end_index + header_end.length);\n        const buffer = new ArrayBuffer(SplatData.RowLength * vertexCount);\n\n        const q_polycam = Quaternion.FromEuler(new Vector3(Math.PI / 2, 0, 0));\n\n        for (let i = 0; i < vertexCount; i++) {\n            const position = new Float32Array(buffer, i * SplatData.RowLength, 3);\n            const scale = new Float32Array(buffer, i * SplatData.RowLength + 12, 3);\n            const rgba = new Uint8ClampedArray(buffer, i * SplatData.RowLength + 24, 4);\n            const rot = new Uint8ClampedArray(buffer, i * SplatData.RowLength + 28, 4);\n\n            let r0: number = 255;\n            let r1: number = 0;\n            let r2: number = 0;\n            let r3: number = 0;\n\n            properties.forEach((property) => {\n                let value;\n                switch (property.type) {\n                    case \"float\":\n                        value = dataView.getFloat32(property.offset + i * rowOffset, true);\n                        break;\n                    case \"int\":\n                        value = dataView.getInt32(property.offset + i * rowOffset, true);\n                        break;\n                    default:\n                        throw new Error(`Unsupported property type: ${property.type}`);\n                }\n\n                switch (property.name) {\n                    case \"x\":\n                        position[0] = value;\n                        break;\n                    case \"y\":\n                        position[1] = value;\n                        break;\n                    case \"z\":\n                        position[2] = value;\n                        break;\n                    case \"scale_0\":\n                        scale[0] = Math.exp(value);\n                        break;\n                    case \"scale_1\":\n                        scale[1] = Math.exp(value);\n                        break;\n                    case \"scale_2\":\n                        scale[2] = Math.exp(value);\n                        break;\n                    case \"red\":\n                        rgba[0] = value;\n                        break;\n                    case \"green\":\n                        rgba[1] = value;\n                        break;\n                    case \"blue\":\n                        rgba[2] = value;\n                        break;\n                    case \"f_dc_0\":\n                        rgba[0] = (0.5 + this.SH_C0 * value) * 255;\n                        break;\n                    case \"f_dc_1\":\n                        rgba[1] = (0.5 + this.SH_C0 * value) * 255;\n                        break;\n                    case \"f_dc_2\":\n                        rgba[2] = (0.5 + this.SH_C0 * value) * 255;\n                        break;\n                    case \"f_dc_3\":\n                        rgba[3] = (0.5 + this.SH_C0 * value) * 255;\n                        break;\n                    case \"opacity\":\n                        rgba[3] = (1 / (1 + Math.exp(-value))) * 255;\n                        break;\n                    case \"rot_0\":\n                        r0 = value;\n                        break;\n                    case \"rot_1\":\n                        r1 = value;\n                        break;\n                    case \"rot_2\":\n                        r2 = value;\n                        break;\n                    case \"rot_3\":\n                        r3 = value;\n                        break;\n                }\n            });\n\n            let q = new Quaternion(r1, r2, r3, r0);\n\n            switch (format) {\n                case \"polycam\": {\n                    const temp = position[1];\n                    position[1] = -position[2];\n                    position[2] = temp;\n                    q = q_polycam.multiply(q);\n                    break;\n                }\n                case \"\":\n                    break;\n                default:\n                    throw new Error(`Unsupported format: ${format}`);\n            }\n\n            q = q.normalize();\n            rot[0] = q.w * 128 + 128;\n            rot[1] = q.x * 128 + 128;\n            rot[2] = q.y * 128 + 128;\n            rot[3] = q.z * 128 + 128;\n        }\n\n        return buffer;\n    }\n}\n\nexport { PLYLoader };\n", "import { Camera } from \"../../../cameras/Camera\";\nimport { Scene } from \"../../../core/Scene\";\nimport { WebGLRenderer } from \"../../WebGLRenderer\";\nimport { ShaderPass } from \"../passes/ShaderPass\";\n\nabstract class ShaderProgram {\n    private _renderer: WebGLRenderer;\n    private _program: WebGLProgram;\n    private _passes: ShaderPass[];\n\n    protected _scene: Scene | null = null;\n    protected _camera: Camera | null = null;\n    protected _started: boolean = false;\n    protected _initialized: boolean = false;\n\n    protected abstract _initialize: () => void;\n    protected abstract _resize: () => void;\n    protected abstract _render: () => void;\n    protected abstract _dispose: () => void;\n\n    initialize: () => void;\n    resize: () => void;\n    render: (scene: Scene, camera: Camera) => void;\n    dispose: () => void;\n\n    constructor(renderer: WebGLRenderer, passes: ShaderPass[]) {\n        this._renderer = renderer;\n        const gl = renderer.gl;\n\n        this._program = gl.createProgram() as WebGLProgram;\n        this._passes = passes || [];\n\n        const vertexShader = gl.createShader(gl.VERTEX_SHADER) as WebGLShader;\n        gl.shaderSource(vertexShader, this._getVertexSource());\n        gl.compileShader(vertexShader);\n        if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n            console.error(gl.getShaderInfoLog(vertexShader));\n        }\n\n        const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER) as WebGLShader;\n        gl.shaderSource(fragmentShader, this._getFragmentSource());\n        gl.compileShader(fragmentShader);\n        if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n            console.error(gl.getShaderInfoLog(fragmentShader));\n        }\n\n        gl.attachShader(this.program, vertexShader);\n        gl.attachShader(this.program, fragmentShader);\n        gl.linkProgram(this.program);\n        if (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\n            console.error(gl.getProgramInfoLog(this.program));\n        }\n\n        this.resize = () => {\n            gl.useProgram(this._program);\n\n            this._resize();\n        };\n\n        this.initialize = () => {\n            console.assert(!this._initialized, \"ShaderProgram already initialized\");\n\n            gl.useProgram(this._program);\n\n            this._initialize();\n            for (const pass of this.passes) {\n                pass.initialize(this);\n            }\n\n            this._initialized = true;\n            this._started = true;\n        };\n\n        this.render = (scene: Scene, camera: Camera) => {\n            gl.useProgram(this._program);\n\n            if (this._scene !== scene || this._camera !== camera) {\n                this.dispose();\n                this._scene = scene;\n                this._camera = camera;\n                this.initialize();\n            }\n\n            for (const pass of this.passes) {\n                pass.render();\n            }\n\n            this._render();\n        };\n\n        this.dispose = () => {\n            if (!this._initialized) return;\n\n            gl.useProgram(this._program);\n\n            for (const pass of this.passes) {\n                pass.dispose();\n            }\n\n            this._dispose();\n\n            this._scene = null;\n            this._camera = null;\n            this._initialized = false;\n        };\n    }\n\n    get renderer() {\n        return this._renderer;\n    }\n\n    get scene() {\n        return this._scene;\n    }\n\n    get camera() {\n        return this._camera;\n    }\n\n    get program() {\n        return this._program;\n    }\n\n    get passes() {\n        return this._passes;\n    }\n\n    get started() {\n        return this._started;\n    }\n\n    protected abstract _getVertexSource(): string;\n    protected abstract _getFragmentSource(): string;\n}\n\nexport { ShaderProgram };\n", "\nvar loadWasm = (() => {\n  var _scriptDir = import.meta.url;\n  \n  return (\nfunction(moduleArg = {}) {\n\nvar Module=moduleArg;var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise((resolve,reject)=>{readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=true;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary;if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.error.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];if(typeof WebAssembly!=\"object\"){abort(\"no native wasm support detected\")}function intArrayFromBase64(s){var decoded=atob(s);var bytes=new Uint8Array(decoded.length);for(var i=0;i<decoded.length;++i){bytes[i]=decoded.charCodeAt(i)}return bytes}function tryParseAsDataURI(filename){if(!isDataURI(filename)){return}return intArrayFromBase64(filename.slice(dataURIPrefix.length))}var wasmMemory;var ABORT=false;var EXITSTATUS;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateMemoryViews(){var b=wasmMemory.buffer;Module[\"HEAP8\"]=HEAP8=new Int8Array(b);Module[\"HEAP16\"]=HEAP16=new Int16Array(b);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(b);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(b);Module[\"HEAP32\"]=HEAP32=new Int32Array(b);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(b);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(b);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(b)}var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;Module[\"monitorRunDependencies\"]?.(runDependencies)}function removeRunDependency(id){runDependencies--;Module[\"monitorRunDependencies\"]?.(runDependencies);if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){Module[\"onAbort\"]?.(what);what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";var isDataURI=filename=>filename.startsWith(dataURIPrefix);var wasmBinaryFile;wasmBinaryFile=\"data:application/octet-stream;base64,\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinarySync(file){if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}var binary=tryParseAsDataURI(file);if(binary){return binary}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}function getBinaryPromise(binaryFile){return Promise.resolve().then(()=>getBinarySync(binaryFile))}function instantiateArrayBuffer(binaryFile,imports,receiver){return getBinaryPromise(binaryFile).then(binary=>WebAssembly.instantiate(binary,imports)).then(instance=>instance).then(receiver,reason=>{err(`failed to asynchronously prepare wasm: ${reason}`);abort(reason)})}function instantiateAsync(binary,binaryFile,imports,callback){return instantiateArrayBuffer(binaryFile,imports,callback)}function createWasm(){var info={\"a\":wasmImports};function receiveInstance(instance,module){wasmExports=instance.exports;wasmMemory=wasmExports[\"k\"];updateMemoryViews();addOnInit(wasmExports[\"l\"]);removeRunDependency(\"wasm-instantiate\");return wasmExports}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){err(`Module.instantiateWasm callback failed with error: ${e}`);readyPromiseReject(e)}}instantiateAsync(wasmBinary,wasmBinaryFile,info,receiveInstantiationResult).catch(readyPromiseReject);return{}}var callRuntimeCallbacks=callbacks=>{while(callbacks.length>0){callbacks.shift()(Module)}};var noExitRuntime=Module[\"noExitRuntime\"]||true;var __embind_register_bigint=(primitiveType,name,size,minRange,maxRange)=>{};var embind_init_charCodes=()=>{var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes};var embind_charCodes;var readLatin1String=ptr=>{var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret};var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var BindingError;var throwBindingError=message=>{throw new BindingError(message)};var InternalError;function sharedRegisterType(rawType,registeredInstance,options={}){var name=registeredInstance.name;if(!rawType){throwBindingError(`type \"${name}\" must have a positive integer typeid pointer`)}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(`Cannot register type '${name}' twice`)}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(cb=>cb())}}function registerType(rawType,registeredInstance,options={}){if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}return sharedRegisterType(rawType,registeredInstance,options)}var GenericWireTypeSize=8;var __embind_register_bool=(rawType,name,trueValue,falseValue)=>{name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(wt){return!!wt},\"toWireType\":function(destructors,o){return o?trueValue:falseValue},\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":function(pointer){return this[\"fromWireType\"](HEAPU8[pointer])},destructorFunction:null})};function handleAllocatorInit(){Object.assign(HandleAllocator.prototype,{get(id){return this.allocated[id]},has(id){return this.allocated[id]!==undefined},allocate(handle){var id=this.freelist.pop()||this.allocated.length;this.allocated[id]=handle;return id},free(id){this.allocated[id]=undefined;this.freelist.push(id)}})}function HandleAllocator(){this.allocated=[undefined];this.freelist=[]}var emval_handles=new HandleAllocator;var __emval_decref=handle=>{if(handle>=emval_handles.reserved&&0===--emval_handles.get(handle).refcount){emval_handles.free(handle)}};var count_emval_handles=()=>{var count=0;for(var i=emval_handles.reserved;i<emval_handles.allocated.length;++i){if(emval_handles.allocated[i]!==undefined){++count}}return count};var init_emval=()=>{emval_handles.allocated.push({value:undefined},{value:null},{value:true},{value:false});emval_handles.reserved=emval_handles.allocated.length;Module[\"count_emval_handles\"]=count_emval_handles};var Emval={toValue:handle=>{if(!handle){throwBindingError(\"Cannot use deleted val. handle = \"+handle)}return emval_handles.get(handle).value},toHandle:value=>{switch(value){case undefined:return 1;case null:return 2;case true:return 3;case false:return 4;default:{return emval_handles.allocate({refcount:1,value:value})}}}};function simpleReadValueFromPointer(pointer){return this[\"fromWireType\"](HEAP32[pointer>>2])}var __embind_register_emval=(rawType,name)=>{name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":handle=>{var rv=Emval.toValue(handle);__emval_decref(handle);return rv},\"toWireType\":(destructors,value)=>Emval.toHandle(value),\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:null})};var floatReadValueFromPointer=(name,width)=>{switch(width){case 4:return function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])};case 8:return function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])};default:throw new TypeError(`invalid float width (${width}): ${name}`)}};var __embind_register_float=(rawType,name,size)=>{name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":value=>value,\"toWireType\":(destructors,value)=>value,\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":floatReadValueFromPointer(name,size),destructorFunction:null})};var integerReadValueFromPointer=(name,width,signed)=>{switch(width){case 1:return signed?pointer=>HEAP8[pointer>>0]:pointer=>HEAPU8[pointer>>0];case 2:return signed?pointer=>HEAP16[pointer>>1]:pointer=>HEAPU16[pointer>>1];case 4:return signed?pointer=>HEAP32[pointer>>2]:pointer=>HEAPU32[pointer>>2];default:throw new TypeError(`invalid integer width (${width}): ${name}`)}};var __embind_register_integer=(primitiveType,name,size,minRange,maxRange)=>{name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var fromWireType=value=>value;if(minRange===0){var bitshift=32-8*size;fromWireType=value=>value<<bitshift>>>bitshift}var isUnsignedType=name.includes(\"unsigned\");var checkAssertions=(value,toTypeName)=>{};var toWireType;if(isUnsignedType){toWireType=function(destructors,value){checkAssertions(value,this.name);return value>>>0}}else{toWireType=function(destructors,value){checkAssertions(value,this.name);return value}}registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":toWireType,\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":integerReadValueFromPointer(name,size,minRange!==0),destructorFunction:null})};var __embind_register_memory_view=(rawType,dataTypeIndex,name)=>{var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){var size=HEAPU32[handle>>2];var data=HEAPU32[handle+4>>2];return new TA(HEAP8.buffer,data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})};function readPointer(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>2])}var stringToUTF8Array=(str,heap,outIdx,maxBytesToWrite)=>{if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx};var stringToUTF8=(str,outPtr,maxBytesToWrite)=>stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite);var lengthBytesUTF8=str=>{var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len};var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;var UTF8ArrayToString=(heapOrArray,idx,maxBytesToRead)=>{var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str};var UTF8ToString=(ptr,maxBytesToRead)=>ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\";var __embind_register_std_string=(rawType,name)=>{name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\"(value){var length=HEAPU32[value>>2];var payload=value+4;var str;if(stdStringIsUTF8){var decodeStartPtr=payload;for(var i=0;i<=length;++i){var currentBytePtr=payload+i;if(i==length||HEAPU8[currentBytePtr]==0){var maxRead=currentBytePtr-decodeStartPtr;var stringSegment=UTF8ToString(decodeStartPtr,maxRead);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[payload+i])}str=a.join(\"\")}_free(value);return str},\"toWireType\"(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var length;var valueIsOfTypeString=typeof value==\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){length=lengthBytesUTF8(value)}else{length=value.length}var base=_malloc(4+length+1);var ptr=base+4;HEAPU32[base>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+i]=value[i]}}}if(destructors!==null){destructors.push(_free,base)}return base},\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":readPointer,destructorFunction(ptr){_free(ptr)}})};var UTF16Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;var UTF16ToString=(ptr,maxBytesToRead)=>{var endPtr=ptr;var idx=endPtr>>1;var maxIdx=idx+maxBytesToRead/2;while(!(idx>=maxIdx)&&HEAPU16[idx])++idx;endPtr=idx<<1;if(endPtr-ptr>32&&UTF16Decoder)return UTF16Decoder.decode(HEAPU8.subarray(ptr,endPtr));var str=\"\";for(var i=0;!(i>=maxBytesToRead/2);++i){var codeUnit=HEAP16[ptr+i*2>>1];if(codeUnit==0)break;str+=String.fromCharCode(codeUnit)}return str};var stringToUTF16=(str,outPtr,maxBytesToWrite)=>{maxBytesToWrite??=2147483647;if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>1]=codeUnit;outPtr+=2}HEAP16[outPtr>>1]=0;return outPtr-startPtr};var lengthBytesUTF16=str=>str.length*2;var UTF32ToString=(ptr,maxBytesToRead)=>{var i=0;var str=\"\";while(!(i>=maxBytesToRead/4)){var utf32=HEAP32[ptr+i*4>>2];if(utf32==0)break;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}return str};var stringToUTF32=(str,outPtr,maxBytesToWrite)=>{maxBytesToWrite??=2147483647;if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr>>2]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}HEAP32[outPtr>>2]=0;return outPtr-startPtr};var lengthBytesUTF32=str=>{var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len};var __embind_register_std_wstring=(rawType,charSize,name)=>{name=readLatin1String(name);var decodeString,encodeString,getHeap,lengthBytesUTF,shift;if(charSize===2){decodeString=UTF16ToString;encodeString=stringToUTF16;lengthBytesUTF=lengthBytesUTF16;getHeap=()=>HEAPU16;shift=1}else if(charSize===4){decodeString=UTF32ToString;encodeString=stringToUTF32;lengthBytesUTF=lengthBytesUTF32;getHeap=()=>HEAPU32;shift=2}registerType(rawType,{name:name,\"fromWireType\":value=>{var length=HEAPU32[value>>2];var HEAP=getHeap();var str;var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i*charSize;if(i==length||HEAP[currentBytePtr>>shift]==0){var maxReadBytes=currentBytePtr-decodeStartPtr;var stringSegment=decodeString(decodeStartPtr,maxReadBytes);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+charSize}}_free(value);return str},\"toWireType\":(destructors,value)=>{if(!(typeof value==\"string\")){throwBindingError(`Cannot pass non-string to C++ string type ${name}`)}var length=lengthBytesUTF(value);var ptr=_malloc(4+length+charSize);HEAPU32[ptr>>2]=length>>shift;encodeString(value,ptr+4,length+charSize);if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction(ptr){_free(ptr)}})};var __embind_register_void=(rawType,name)=>{name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":()=>undefined,\"toWireType\":(destructors,o)=>undefined})};var getHeapMax=()=>2147483648;var growMemory=size=>{var b=wasmMemory.buffer;var pages=(size-b.byteLength+65535)/65536;try{wasmMemory.grow(pages);updateMemoryViews();return 1}catch(e){}};var _emscripten_resize_heap=requestedSize=>{var oldSize=HEAPU8.length;requestedSize>>>=0;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}var alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=growMemory(newSize);if(replacement){return true}}return false};embind_init_charCodes();BindingError=Module[\"BindingError\"]=class BindingError extends Error{constructor(message){super(message);this.name=\"BindingError\"}};InternalError=Module[\"InternalError\"]=class InternalError extends Error{constructor(message){super(message);this.name=\"InternalError\"}};handleAllocatorInit();init_emval();var wasmImports={f:__embind_register_bigint,i:__embind_register_bool,h:__embind_register_emval,e:__embind_register_float,b:__embind_register_integer,a:__embind_register_memory_view,d:__embind_register_std_string,c:__embind_register_std_wstring,j:__embind_register_void,g:_emscripten_resize_heap};var wasmExports=createWasm();var ___wasm_call_ctors=()=>(___wasm_call_ctors=wasmExports[\"l\"])();var _pack=Module[\"_pack\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)=>(_pack=Module[\"_pack\"]=wasmExports[\"m\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);var ___errno_location=()=>(___errno_location=wasmExports[\"__errno_location\"])();var _malloc=Module[\"_malloc\"]=a0=>(_malloc=Module[\"_malloc\"]=wasmExports[\"o\"])(a0);var _free=Module[\"_free\"]=a0=>(_free=Module[\"_free\"]=wasmExports[\"p\"])(a0);var ___cxa_is_pointer_type=a0=>(___cxa_is_pointer_type=wasmExports[\"__cxa_is_pointer_type\"])(a0);var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(){if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\n\n\n  return moduleArg.ready\n}\n);\n})();\n;\nexport default loadWasm;", "import { Scene } from \"../../../core/Scene\";\nimport { Splat } from \"../../../splats/Splat\";\nimport DataWorker from \"web-worker:./DataWorker.ts\";\nimport loadWasm from \"../../../wasm/data\";\n\nclass RenderData {\n    public dataChanged = false;\n    public transformsChanged = false;\n\n    private _splatIndices: Map<Splat, number>;\n    private _offsets: Map<Splat, number>;\n    private _data: Uint32Array;\n    private _width: number;\n    private _height: number;\n    private _transforms: Float32Array;\n    private _transformsWidth: number;\n    private _transformsHeight: number;\n    private _transformIndices: Uint32Array;\n    private _transformIndicesWidth: number;\n    private _transformIndicesHeight: number;\n    private _positions: Float32Array;\n    private _rotations: Float32Array;\n    private _scales: Float32Array;\n    private _vertexCount: number;\n    private _updating: Set<Splat> = new Set<Splat>();\n    private _dirty: Set<Splat> = new Set<Splat>();\n    private _worker: Worker;\n\n    getSplat: (index: number) => Splat | null;\n    getLocalIndex: (splat: Splat, index: number) => number;\n    markDirty: (splat: Splat) => void;\n    rebuild: () => void;\n    dispose: () => void;\n\n    constructor(scene: Scene) {\n        let vertexCount = 0;\n        let splatIndex = 0;\n        this._splatIndices = new Map<Splat, number>();\n        this._offsets = new Map<Splat, number>();\n        const lookup = new Map<number, Splat>();\n        for (const object of scene.objects) {\n            if (object instanceof Splat) {\n                this._splatIndices.set(object, splatIndex);\n                this._offsets.set(object, vertexCount);\n                lookup.set(vertexCount, object);\n                vertexCount += object.data.vertexCount;\n                splatIndex++;\n            }\n        }\n\n        this._vertexCount = vertexCount;\n        this._width = 2048;\n        this._height = Math.ceil((2 * this.vertexCount) / this.width);\n        this._data = new Uint32Array(this.width * this.height * 4);\n\n        this._transformsWidth = 5;\n        this._transformsHeight = lookup.size;\n        this._transforms = new Float32Array(this._transformsWidth * this._transformsHeight * 4);\n\n        this._transformIndicesWidth = 1024;\n        this._transformIndicesHeight = Math.ceil(this.vertexCount / this._transformIndicesWidth);\n        this._transformIndices = new Uint32Array(this._transformIndicesWidth * this._transformIndicesHeight);\n\n        this._positions = new Float32Array(this.vertexCount * 3);\n        this._rotations = new Float32Array(this.vertexCount * 4);\n        this._scales = new Float32Array(this.vertexCount * 3);\n\n        this._worker = new DataWorker();\n\n        const updateTransform = (splat: Splat) => {\n            const splatIndex = this._splatIndices.get(splat) as number;\n            this._transforms.set(splat.transform.buffer, splatIndex * 20);\n            this._transforms[splatIndex * 20 + 16] = splat.selected ? 1 : 0;\n            splat.positionChanged = false;\n            splat.rotationChanged = false;\n            splat.scaleChanged = false;\n            splat.selectedChanged = false;\n            this.transformsChanged = true;\n        };\n\n        this._worker.onmessage = (e) => {\n            if (e.data.response) {\n                const response = e.data.response;\n                const splat = lookup.get(response.offset) as Splat;\n                updateTransform(splat);\n\n                const splatIndex = this._splatIndices.get(splat) as number;\n                for (let i = 0; i < splat.data.vertexCount; i++) {\n                    this._transformIndices[response.offset + i] = splatIndex;\n                }\n\n                this._data.set(response.data, response.offset * 8);\n                splat.data.reattach(\n                    response.positions,\n                    response.rotations,\n                    response.scales,\n                    response.colors,\n                    response.selection,\n                );\n\n                this._positions.set(response.worldPositions, response.offset * 3);\n                this._rotations.set(response.worldRotations, response.offset * 4);\n                this._scales.set(response.worldScales, response.offset * 3);\n\n                this._updating.delete(splat);\n\n                splat.selectedChanged = false;\n\n                this.dataChanged = true;\n            }\n        };\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let wasmModule: any;\n\n        async function initWasm() {\n            wasmModule = await loadWasm();\n        }\n\n        initWasm();\n\n        async function waitForWasm() {\n            while (!wasmModule) {\n                await new Promise((resolve) => setTimeout(resolve, 0));\n            }\n        }\n\n        const buildImmediate = (splat: Splat) => {\n            if (!wasmModule) {\n                waitForWasm().then(() => {\n                    buildImmediate(splat);\n                });\n                return;\n            }\n\n            updateTransform(splat);\n\n            const positionsPtr = wasmModule._malloc(3 * splat.data.vertexCount * 4);\n            const rotationsPtr = wasmModule._malloc(4 * splat.data.vertexCount * 4);\n            const scalesPtr = wasmModule._malloc(3 * splat.data.vertexCount * 4);\n            const colorsPtr = wasmModule._malloc(4 * splat.data.vertexCount);\n            const selectionPtr = wasmModule._malloc(splat.data.vertexCount);\n            const dataPtr = wasmModule._malloc(8 * splat.data.vertexCount * 4);\n            const worldPositionsPtr = wasmModule._malloc(3 * splat.data.vertexCount * 4);\n            const worldRotationsPtr = wasmModule._malloc(4 * splat.data.vertexCount * 4);\n            const worldScalesPtr = wasmModule._malloc(3 * splat.data.vertexCount * 4);\n\n            wasmModule.HEAPF32.set(splat.data.positions, positionsPtr / 4);\n            wasmModule.HEAPF32.set(splat.data.rotations, rotationsPtr / 4);\n            wasmModule.HEAPF32.set(splat.data.scales, scalesPtr / 4);\n            wasmModule.HEAPU8.set(splat.data.colors, colorsPtr);\n            wasmModule.HEAPU8.set(splat.data.selection, selectionPtr);\n\n            wasmModule._pack(\n                splat.selected,\n                splat.data.vertexCount,\n                positionsPtr,\n                rotationsPtr,\n                scalesPtr,\n                colorsPtr,\n                selectionPtr,\n                dataPtr,\n                worldPositionsPtr,\n                worldRotationsPtr,\n                worldScalesPtr,\n            );\n\n            const outData = new Uint32Array(wasmModule.HEAPU32.buffer, dataPtr, splat.data.vertexCount * 8);\n            const worldPositions = new Float32Array(\n                wasmModule.HEAPF32.buffer,\n                worldPositionsPtr,\n                splat.data.vertexCount * 3,\n            );\n            const worldRotations = new Float32Array(\n                wasmModule.HEAPF32.buffer,\n                worldRotationsPtr,\n                splat.data.vertexCount * 4,\n            );\n            const worldScales = new Float32Array(wasmModule.HEAPF32.buffer, worldScalesPtr, splat.data.vertexCount * 3);\n\n            const splatIndex = this._splatIndices.get(splat) as number;\n            const offset = this._offsets.get(splat) as number;\n            for (let i = 0; i < splat.data.vertexCount; i++) {\n                this._transformIndices[offset + i] = splatIndex;\n            }\n            this._data.set(outData, offset * 8);\n            this._positions.set(worldPositions, offset * 3);\n            this._rotations.set(worldRotations, offset * 4);\n            this._scales.set(worldScales, offset * 3);\n\n            wasmModule._free(positionsPtr);\n            wasmModule._free(rotationsPtr);\n            wasmModule._free(scalesPtr);\n            wasmModule._free(colorsPtr);\n            wasmModule._free(selectionPtr);\n            wasmModule._free(dataPtr);\n            wasmModule._free(worldPositionsPtr);\n            wasmModule._free(worldRotationsPtr);\n            wasmModule._free(worldScalesPtr);\n\n            this.dataChanged = true;\n        };\n\n        const build = (splat: Splat) => {\n            if (splat.positionChanged || splat.rotationChanged || splat.scaleChanged || splat.selectedChanged) {\n                updateTransform(splat);\n            }\n\n            if (!splat.data.changed || splat.data.detached) return;\n\n            const serializedSplat = {\n                position: new Float32Array(splat.position.flat()),\n                rotation: new Float32Array(splat.rotation.flat()),\n                scale: new Float32Array(splat.scale.flat()),\n                selected: splat.selected,\n                vertexCount: splat.data.vertexCount,\n                positions: splat.data.positions,\n                rotations: splat.data.rotations,\n                scales: splat.data.scales,\n                colors: splat.data.colors,\n                selection: splat.data.selection,\n                offset: this._offsets.get(splat) as number,\n            };\n\n            this._worker.postMessage(\n                {\n                    splat: serializedSplat,\n                },\n                [\n                    serializedSplat.position.buffer,\n                    serializedSplat.rotation.buffer,\n                    serializedSplat.scale.buffer,\n                    serializedSplat.positions.buffer,\n                    serializedSplat.rotations.buffer,\n                    serializedSplat.scales.buffer,\n                    serializedSplat.colors.buffer,\n                    serializedSplat.selection.buffer,\n                ],\n            );\n\n            this._updating.add(splat);\n\n            splat.data.detached = true;\n        };\n\n        this.getSplat = (index: number) => {\n            let splat = null;\n            for (const [key, value] of this._offsets) {\n                if (index >= value) {\n                    splat = key;\n                } else {\n                    break;\n                }\n            }\n            return splat;\n        };\n\n        this.getLocalIndex = (splat: Splat, index: number) => {\n            const offset = this._offsets.get(splat) as number;\n            return index - offset;\n        };\n\n        this.markDirty = (splat: Splat) => {\n            this._dirty.add(splat);\n        };\n\n        this.rebuild = () => {\n            for (const splat of this._dirty) {\n                build(splat);\n            }\n\n            this._dirty.clear();\n        };\n\n        this.dispose = () => {\n            this._worker.terminate();\n        };\n\n        for (const splat of this._splatIndices.keys()) {\n            buildImmediate(splat);\n        }\n    }\n\n    get offsets() {\n        return this._offsets;\n    }\n\n    get data() {\n        return this._data;\n    }\n\n    get width() {\n        return this._width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    get transforms() {\n        return this._transforms;\n    }\n\n    get transformsWidth() {\n        return this._transformsWidth;\n    }\n\n    get transformsHeight() {\n        return this._transformsHeight;\n    }\n\n    get transformIndices() {\n        return this._transformIndices;\n    }\n\n    get transformIndicesWidth() {\n        return this._transformIndicesWidth;\n    }\n\n    get transformIndicesHeight() {\n        return this._transformIndicesHeight;\n    }\n\n    get positions() {\n        return this._positions;\n    }\n\n    get rotations() {\n        return this._rotations;\n    }\n\n    get scales() {\n        return this._scales;\n    }\n\n    get vertexCount() {\n        return this._vertexCount;\n    }\n\n    get needsRebuild() {\n        return this._dirty.size > 0;\n    }\n\n    get updating() {\n        return this._updating.size > 0;\n    }\n}\n\nexport { RenderData };\n", "class Color32 {\n    public readonly r: number;\n    public readonly g: number;\n    public readonly b: number;\n    public readonly a: number;\n\n    constructor(r: number = 0, g: number = 0, b: number = 0, a: number = 255) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n\n    flat(): number[] {\n        return [this.r, this.g, this.b, this.a];\n    }\n\n    flatNorm(): number[] {\n        return [this.r / 255, this.g / 255, this.b / 255, this.a / 255];\n    }\n\n    toHexString(): string {\n        return (\n            \"#\" +\n            this.flat()\n                .map((x) => x.toString(16).padStart(2, \"0\"))\n                .join(\"\")\n        );\n    }\n\n    toString(): string {\n        return `[${this.flat().join(\", \")}]`;\n    }\n}\n\nexport { Color32 };\n", "import SortWorker from \"web-worker:../utils/SortWorker.ts\";\n\nimport { ShaderProgram } from \"./ShaderProgram\";\nimport { ShaderPass } from \"../passes/ShaderPass\";\nimport { RenderData } from \"../utils/RenderData\";\nimport { Color32 } from \"../../../math/Color32\";\nimport { ObjectAddedEvent, ObjectChangedEvent, ObjectRemovedEvent } from \"../../../events/Events\";\nimport { Splat } from \"../../../splats/Splat\";\nimport { WebGLRenderer } from \"../../WebGLRenderer\";\n\nconst vertexShaderSource = /* glsl */ `#version 300 es\nprecision highp float;\nprecision highp int;\n\nuniform highp usampler2D u_texture;\nuniform highp sampler2D u_transforms;\nuniform highp usampler2D u_transformIndices;\nuniform mat4 projection, view;\nuniform vec2 focal;\nuniform vec2 viewport;\n\nuniform bool useDepthFade;\nuniform float depthFade;\n\nin vec2 position;\nin int index;\n\nout vec4 vColor;\nout vec2 vPosition;\nout float vSize;\nout float vSelected;\n\nvoid main () {\n    uvec4 cen = texelFetch(u_texture, ivec2((uint(index) & 0x3ffu) << 1, uint(index) >> 10), 0);\n    float selected = float((cen.w >> 24) & 0xffu);\n\n    uint transformIndex = texelFetch(u_transformIndices, ivec2(uint(index) & 0x3ffu, uint(index) >> 10), 0).x;\n    mat4 transform = mat4(\n        texelFetch(u_transforms, ivec2(0, transformIndex), 0),\n        texelFetch(u_transforms, ivec2(1, transformIndex), 0),\n        texelFetch(u_transforms, ivec2(2, transformIndex), 0),\n        texelFetch(u_transforms, ivec2(3, transformIndex), 0)\n    );\n\n    if (selected < 0.5) {\n        selected = texelFetch(u_transforms, ivec2(4, transformIndex), 0).x;\n    }\n\n    mat4 viewTransform = view * transform;\n\n    vec4 cam = viewTransform * vec4(uintBitsToFloat(cen.xyz), 1);\n    vec4 pos2d = projection * cam;\n\n    float clip = 1.2 * pos2d.w;\n    if (pos2d.z < -pos2d.w || pos2d.x < -clip || pos2d.x > clip || pos2d.y < -clip || pos2d.y > clip) {\n        gl_Position = vec4(0.0, 0.0, 2.0, 1.0);\n        return;\n    }\n\n    uvec4 cov = texelFetch(u_texture, ivec2(((uint(index) & 0x3ffu) << 1) | 1u, uint(index) >> 10), 0);\n    vec2 u1 = unpackHalf2x16(cov.x), u2 = unpackHalf2x16(cov.y), u3 = unpackHalf2x16(cov.z);\n    mat3 Vrk = mat3(u1.x, u1.y, u2.x, u1.y, u2.y, u3.x, u2.x, u3.x, u3.y);\n\n    mat3 J = mat3(\n        focal.x / cam.z, 0., -(focal.x * cam.x) / (cam.z * cam.z), \n        0., -focal.y / cam.z, (focal.y * cam.y) / (cam.z * cam.z), \n        0., 0., 0.\n    );\n\n    mat3 T = transpose(mat3(viewTransform)) * J;\n    mat3 cov2d = transpose(T) * Vrk * T;\n\n    float mid = (cov2d[0][0] + cov2d[1][1]) / 2.0;\n    float radius = length(vec2((cov2d[0][0] - cov2d[1][1]) / 2.0, cov2d[0][1]));\n    float lambda1 = mid + radius, lambda2 = mid - radius;\n\n    if (lambda2 < 0.0) return;\n    vec2 diagonalVector = normalize(vec2(cov2d[0][1], lambda1 - cov2d[0][0]));\n    vec2 majorAxis = min(sqrt(2.0 * lambda1), 1024.0) * diagonalVector;\n    vec2 minorAxis = min(sqrt(2.0 * lambda2), 1024.0) * vec2(diagonalVector.y, -diagonalVector.x);\n\n    vColor = vec4((cov.w) & 0xffu, (cov.w >> 8) & 0xffu, (cov.w >> 16) & 0xffu, (cov.w >> 24) & 0xffu) / 255.0;\n    vPosition = position;\n    vSize = length(majorAxis);\n    vSelected = selected;\n\n    float scalingFactor = 1.0;\n\n    if (useDepthFade) {\n        float depthNorm = (pos2d.z / pos2d.w + 1.0) / 2.0;\n        float near = 0.1; float far = 100.0;\n        float normalizedDepth = (2.0 * near) / (far + near - depthNorm * (far - near));\n        float start = max(normalizedDepth - 0.1, 0.0);\n        float end = min(normalizedDepth + 0.1, 1.0);\n        scalingFactor = clamp((depthFade - start) / (end - start), 0.0, 1.0);\n    }\n\n    vec2 vCenter = vec2(pos2d) / pos2d.w;\n    gl_Position = vec4(\n        vCenter \n        + position.x * majorAxis * scalingFactor / viewport\n        + position.y * minorAxis * scalingFactor / viewport, 0.0, 1.0);\n}\n`;\n\nconst fragmentShaderSource = /* glsl */ `#version 300 es\nprecision highp float;\n\nuniform float outlineThickness;\nuniform vec4 outlineColor;\n\nin vec4 vColor;\nin vec2 vPosition;\nin float vSize;\nin float vSelected;\n\nout vec4 fragColor;\n\nvoid main () {\n    float A = -dot(vPosition, vPosition);\n\n    if (A < -4.0) discard;\n\n    if (vSelected < 0.5) {\n        float B = exp(A) * vColor.a;\n        fragColor = vec4(B * vColor.rgb, B);\n        return;\n    }\n\n    float outlineThreshold = -4.0 + (outlineThickness / vSize);\n\n    if (A < outlineThreshold) {\n        fragColor = outlineColor;\n    } \n    else {\n        float B = exp(A) * vColor.a;\n        fragColor = vec4(B * vColor.rgb, B);\n    }\n}\n`;\n\nclass RenderProgram extends ShaderProgram {\n    private _outlineThickness: number = 10.0;\n    private _outlineColor: Color32 = new Color32(255, 165, 0, 255);\n    private _renderData: RenderData | null = null;\n    private _depthIndex: Uint32Array | null = null;\n    private _chunks: Uint8Array | null = null;\n    private _splatTexture: WebGLTexture | null = null;\n\n    protected _initialize: () => void;\n    protected _resize: () => void;\n    protected _render: () => void;\n    protected _dispose: () => void;\n\n    private _setOutlineThickness: (value: number) => void;\n    private _setOutlineColor: (value: Color32) => void;\n\n    constructor(renderer: WebGLRenderer, passes: ShaderPass[]) {\n        super(renderer, passes);\n\n        const canvas = renderer.canvas;\n        const gl = renderer.gl;\n\n        let worker: Worker;\n\n        let u_projection: WebGLUniformLocation;\n        let u_viewport: WebGLUniformLocation;\n        let u_focal: WebGLUniformLocation;\n        let u_view: WebGLUniformLocation;\n        let u_texture: WebGLUniformLocation;\n        let u_transforms: WebGLUniformLocation;\n        let u_transformIndices: WebGLUniformLocation;\n\n        let u_outlineThickness: WebGLUniformLocation;\n        let u_outlineColor: WebGLUniformLocation;\n\n        let positionAttribute: number;\n        let indexAttribute: number;\n\n        let transformsTexture: WebGLTexture;\n        let transformIndicesTexture: WebGLTexture;\n\n        let vertexBuffer: WebGLBuffer;\n        let indexBuffer: WebGLBuffer;\n\n        this._resize = () => {\n            if (!this._camera) return;\n\n            this._camera.data.setSize(canvas.width, canvas.height);\n            this._camera.update();\n\n            u_projection = gl.getUniformLocation(this.program, \"projection\") as WebGLUniformLocation;\n            gl.uniformMatrix4fv(u_projection, false, this._camera.data.projectionMatrix.buffer);\n\n            u_viewport = gl.getUniformLocation(this.program, \"viewport\") as WebGLUniformLocation;\n            gl.uniform2fv(u_viewport, new Float32Array([canvas.width, canvas.height]));\n        };\n\n        const createWorker = () => {\n            worker = new SortWorker();\n            worker.onmessage = (e) => {\n                if (e.data.depthIndex) {\n                    const { depthIndex, chunks } = e.data;\n                    this._depthIndex = depthIndex;\n                    this._chunks = chunks;\n                    gl.bindBuffer(gl.ARRAY_BUFFER, indexBuffer);\n                    gl.bufferData(gl.ARRAY_BUFFER, depthIndex, gl.STATIC_DRAW);\n                }\n            };\n        };\n\n        this._initialize = () => {\n            if (!this._scene || !this._camera) {\n                console.error(\"Cannot render without scene and camera\");\n                return;\n            }\n\n            this._resize();\n\n            this._scene.addEventListener(\"objectAdded\", handleObjectAdded);\n            this._scene.addEventListener(\"objectRemoved\", handleObjectRemoved);\n            for (const object of this._scene.objects) {\n                if (object instanceof Splat) {\n                    object.addEventListener(\"objectChanged\", handleObjectChanged);\n                }\n            }\n\n            this._renderData = new RenderData(this._scene);\n\n            u_focal = gl.getUniformLocation(this.program, \"focal\") as WebGLUniformLocation;\n            gl.uniform2fv(u_focal, new Float32Array([this._camera.data.fx, this._camera.data.fy]));\n\n            u_view = gl.getUniformLocation(this.program, \"view\") as WebGLUniformLocation;\n            gl.uniformMatrix4fv(u_view, false, this._camera.data.viewMatrix.buffer);\n\n            u_outlineThickness = gl.getUniformLocation(this.program, \"outlineThickness\") as WebGLUniformLocation;\n            gl.uniform1f(u_outlineThickness, this.outlineThickness);\n\n            u_outlineColor = gl.getUniformLocation(this.program, \"outlineColor\") as WebGLUniformLocation;\n            gl.uniform4fv(u_outlineColor, new Float32Array(this.outlineColor.flatNorm()));\n\n            this._splatTexture = gl.createTexture() as WebGLTexture;\n            u_texture = gl.getUniformLocation(this.program, \"u_texture\") as WebGLUniformLocation;\n            gl.uniform1i(u_texture, 0);\n\n            transformsTexture = gl.createTexture() as WebGLTexture;\n            u_transforms = gl.getUniformLocation(this.program, \"u_transforms\") as WebGLUniformLocation;\n            gl.uniform1i(u_transforms, 1);\n\n            transformIndicesTexture = gl.createTexture() as WebGLTexture;\n            u_transformIndices = gl.getUniformLocation(this.program, \"u_transformIndices\") as WebGLUniformLocation;\n            gl.uniform1i(u_transformIndices, 2);\n\n            vertexBuffer = gl.createBuffer() as WebGLBuffer;\n            gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-2, -2, 2, -2, 2, 2, -2, 2]), gl.STATIC_DRAW);\n\n            positionAttribute = gl.getAttribLocation(this.program, \"position\");\n            gl.enableVertexAttribArray(positionAttribute);\n            gl.vertexAttribPointer(positionAttribute, 2, gl.FLOAT, false, 0, 0);\n\n            indexBuffer = gl.createBuffer() as WebGLBuffer;\n            indexAttribute = gl.getAttribLocation(this.program, \"index\");\n            gl.enableVertexAttribArray(indexAttribute);\n            gl.bindBuffer(gl.ARRAY_BUFFER, indexBuffer);\n\n            createWorker();\n        };\n\n        const handleObjectAdded = (event: Event) => {\n            const e = event as ObjectAddedEvent;\n\n            if (e.object instanceof Splat) {\n                e.object.addEventListener(\"objectChanged\", handleObjectChanged);\n            }\n\n            this.dispose();\n        };\n\n        const handleObjectRemoved = (event: Event) => {\n            const e = event as ObjectRemovedEvent;\n\n            if (e.object instanceof Splat) {\n                e.object.removeEventListener(\"objectChanged\", handleObjectChanged);\n            }\n\n            this.dispose();\n        };\n\n        const handleObjectChanged = (event: Event) => {\n            const e = event as ObjectChangedEvent;\n\n            if (e.object instanceof Splat && this._renderData) {\n                this._renderData.markDirty(e.object);\n            }\n        };\n\n        this._render = () => {\n            if (!this._scene || !this._camera || !this.renderData) {\n                console.error(\"Cannot render without scene and camera\");\n                return;\n            }\n\n            this._camera.update();\n            worker.postMessage({ viewProj: this._camera.data.viewProj });\n\n            if (this.renderData.needsRebuild) {\n                this.renderData.rebuild();\n            }\n\n            if (this.renderData.dataChanged || this.renderData.transformsChanged) {\n                if (this.renderData.dataChanged) {\n                    gl.activeTexture(gl.TEXTURE0);\n                    gl.bindTexture(gl.TEXTURE_2D, this.splatTexture);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n                    gl.texImage2D(\n                        gl.TEXTURE_2D,\n                        0,\n                        gl.RGBA32UI,\n                        this.renderData.width,\n                        this.renderData.height,\n                        0,\n                        gl.RGBA_INTEGER,\n                        gl.UNSIGNED_INT,\n                        this.renderData.data,\n                    );\n                }\n\n                if (this.renderData.transformsChanged) {\n                    gl.activeTexture(gl.TEXTURE1);\n                    gl.bindTexture(gl.TEXTURE_2D, transformsTexture);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n                    gl.texImage2D(\n                        gl.TEXTURE_2D,\n                        0,\n                        gl.RGBA32F,\n                        this.renderData.transformsWidth,\n                        this.renderData.transformsHeight,\n                        0,\n                        gl.RGBA,\n                        gl.FLOAT,\n                        this.renderData.transforms,\n                    );\n\n                    gl.activeTexture(gl.TEXTURE2);\n                    gl.bindTexture(gl.TEXTURE_2D, transformIndicesTexture);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n                    gl.texImage2D(\n                        gl.TEXTURE_2D,\n                        0,\n                        gl.R32UI,\n                        this.renderData.transformIndicesWidth,\n                        this.renderData.transformIndicesHeight,\n                        0,\n                        gl.RED_INTEGER,\n                        gl.UNSIGNED_INT,\n                        this.renderData.transformIndices,\n                    );\n                }\n\n                const detachedPositions = new Float32Array(this.renderData.positions.slice().buffer);\n                const detachedTransforms = new Float32Array(this.renderData.transforms.slice().buffer);\n                const detachedTransformIndices = new Uint32Array(this.renderData.transformIndices.slice().buffer);\n                worker.postMessage(\n                    {\n                        sortData: {\n                            positions: detachedPositions,\n                            transforms: detachedTransforms,\n                            transformIndices: detachedTransformIndices,\n                            vertexCount: this.renderData.vertexCount,\n                        },\n                    },\n                    [detachedPositions.buffer, detachedTransforms.buffer, detachedTransformIndices.buffer],\n                );\n\n                this.renderData.dataChanged = false;\n                this.renderData.transformsChanged = false;\n            }\n\n            gl.viewport(0, 0, canvas.width, canvas.height);\n            gl.clearColor(0, 0, 0, 0);\n            gl.clear(gl.COLOR_BUFFER_BIT);\n\n            gl.disable(gl.DEPTH_TEST);\n            gl.enable(gl.BLEND);\n            gl.blendFuncSeparate(gl.ONE_MINUS_DST_ALPHA, gl.ONE, gl.ONE_MINUS_DST_ALPHA, gl.ONE);\n            gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n\n            gl.uniformMatrix4fv(u_projection, false, this._camera.data.projectionMatrix.buffer);\n            gl.uniformMatrix4fv(u_view, false, this._camera.data.viewMatrix.buffer);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n            gl.vertexAttribPointer(positionAttribute, 2, gl.FLOAT, false, 0, 0);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, indexBuffer);\n            gl.vertexAttribIPointer(indexAttribute, 1, gl.INT, 0, 0);\n            gl.vertexAttribDivisor(indexAttribute, 1);\n\n            gl.drawArraysInstanced(gl.TRIANGLE_FAN, 0, 4, this.renderData.vertexCount);\n        };\n\n        this._dispose = () => {\n            if (!this._scene || !this._camera || !this.renderData) {\n                console.error(\"Cannot dispose without scene and camera\");\n                return;\n            }\n\n            this._scene.removeEventListener(\"objectAdded\", handleObjectAdded);\n            this._scene.removeEventListener(\"objectRemoved\", handleObjectRemoved);\n            for (const object of this._scene.objects) {\n                if (object instanceof Splat) {\n                    object.removeEventListener(\"objectChanged\", handleObjectChanged);\n                }\n            }\n\n            worker.terminate();\n            this.renderData.dispose();\n\n            gl.deleteTexture(this.splatTexture);\n            gl.deleteTexture(transformsTexture);\n            gl.deleteTexture(transformIndicesTexture);\n\n            gl.deleteBuffer(indexBuffer);\n            gl.deleteBuffer(vertexBuffer);\n        };\n\n        this._setOutlineThickness = (value: number) => {\n            this._outlineThickness = value;\n            if (this._initialized) {\n                gl.uniform1f(u_outlineThickness, value);\n            }\n        };\n\n        this._setOutlineColor = (value: Color32) => {\n            this._outlineColor = value;\n            if (this._initialized) {\n                gl.uniform4fv(u_outlineColor, new Float32Array(value.flatNorm()));\n            }\n        };\n    }\n\n    get renderData() {\n        return this._renderData;\n    }\n\n    get depthIndex() {\n        return this._depthIndex;\n    }\n\n    get chunks() {\n        return this._chunks;\n    }\n\n    get splatTexture() {\n        return this._splatTexture;\n    }\n\n    get outlineThickness() {\n        return this._outlineThickness;\n    }\n\n    set outlineThickness(value: number) {\n        this._setOutlineThickness(value);\n    }\n\n    get outlineColor() {\n        return this._outlineColor;\n    }\n\n    set outlineColor(value: Color32) {\n        this._setOutlineColor(value);\n    }\n\n    protected _getVertexSource() {\n        return vertexShaderSource;\n    }\n\n    protected _getFragmentSource() {\n        return fragmentShaderSource;\n    }\n}\n\nexport { RenderProgram };\n", "import { RenderProgram } from \"../programs/RenderProgram\";\nimport { ShaderProgram } from \"../programs/ShaderProgram\";\nimport { ShaderPass } from \"./ShaderPass\";\n\nclass FadeInPass implements ShaderPass {\n    initialize: (program: ShaderProgram) => void;\n    render: () => void;\n\n    constructor(speed: number = 1.0) {\n        let value = 0.0;\n        let active = false;\n\n        let renderProgram: RenderProgram;\n        let gl: WebGL2RenderingContext;\n        let u_useDepthFade: WebGLUniformLocation;\n        let u_depthFade: WebGLUniformLocation;\n\n        this.initialize = (program: ShaderProgram) => {\n            if (!(program instanceof RenderProgram)) {\n                throw new Error(\"FadeInPass requires a RenderProgram\");\n            }\n\n            value = program.started ? 1.0 : 0.0;\n            active = true;\n            renderProgram = program;\n            gl = program.renderer.gl;\n\n            u_useDepthFade = gl.getUniformLocation(renderProgram.program, \"useDepthFade\") as WebGLUniformLocation;\n            gl.uniform1i(u_useDepthFade, 1);\n\n            u_depthFade = gl.getUniformLocation(renderProgram.program, \"depthFade\") as WebGLUniformLocation;\n            gl.uniform1f(u_depthFade, value);\n        };\n\n        this.render = () => {\n            if (!active || renderProgram.renderData?.updating) return;\n            gl.useProgram(renderProgram.program);\n            value = Math.min(value + speed * 0.01, 1.0);\n            if (value >= 1.0) {\n                active = false;\n                gl.uniform1i(u_useDepthFade, 0);\n            }\n            gl.uniform1f(u_depthFade, value);\n        };\n    }\n\n    dispose() {}\n}\n\nexport { FadeInPass };\n", "import type { Scene } from \"../core/Scene\";\nimport { FadeInPass } from \"./webgl/passes/FadeInPass\";\nimport { Camera } from \"../cameras/Camera\";\nimport { Color32 } from \"../math/Color32\";\nimport { ShaderProgram } from \"./webgl/programs/ShaderProgram\";\nimport { RenderProgram } from \"./webgl/programs/RenderProgram\";\nimport { ShaderPass } from \"./webgl/passes/ShaderPass\";\n\nexport class WebGLRenderer {\n    private _canvas: HTMLCanvasElement;\n    private _gl: WebGL2RenderingContext;\n    private _backgroundColor: Color32 = new Color32();\n    private _renderProgram: RenderProgram;\n\n    addProgram: (program: ShaderProgram) => void;\n    removeProgram: (program: ShaderProgram) => void;\n    resize: () => void;\n    setSize: (width: number, height: number) => void;\n    render: (scene: Scene, camera: Camera) => void;\n    dispose: () => void;\n\n    constructor(optionalCanvas: HTMLCanvasElement | null = null, optionalRenderPasses: ShaderPass[] | null = null) {\n        const canvas: HTMLCanvasElement = optionalCanvas || document.createElement(\"canvas\");\n        if (!optionalCanvas) {\n            canvas.style.display = \"block\";\n            canvas.style.boxSizing = \"border-box\";\n            canvas.style.width = \"100%\";\n            canvas.style.height = \"100%\";\n            canvas.style.margin = \"0\";\n            canvas.style.padding = \"0\";\n            document.body.appendChild(canvas);\n        }\n        canvas.style.background = this._backgroundColor.toHexString();\n        this._canvas = canvas;\n\n        this._gl = canvas.getContext(\"webgl2\", { antialias: false }) as WebGL2RenderingContext;\n\n        const renderPasses = optionalRenderPasses || [];\n        if (!optionalRenderPasses) {\n            renderPasses.push(new FadeInPass());\n        }\n\n        this._renderProgram = new RenderProgram(this, renderPasses);\n        const programs = [this._renderProgram] as ShaderProgram[];\n\n        this.resize = () => {\n            const width = canvas.clientWidth;\n            const height = canvas.clientHeight;\n            if (canvas.width !== width || canvas.height !== height) {\n                this.setSize(width, height);\n            }\n        };\n\n        this.setSize = (width: number, height: number) => {\n            canvas.width = width;\n            canvas.height = height;\n            this._gl.viewport(0, 0, canvas.width, canvas.height);\n            for (const program of programs) {\n                program.resize();\n            }\n        };\n\n        this.render = (scene: Scene, camera: Camera) => {\n            for (const program of programs) {\n                program.render(scene, camera);\n            }\n        };\n\n        this.dispose = () => {\n            for (const program of programs) {\n                program.dispose();\n            }\n        };\n\n        this.addProgram = (program: ShaderProgram) => {\n            programs.push(program);\n        };\n\n        this.removeProgram = (program: ShaderProgram) => {\n            const index = programs.indexOf(program);\n            if (index < 0) {\n                throw new Error(\"Program not found\");\n            }\n            programs.splice(index, 1);\n        };\n\n        this.resize();\n    }\n\n    get canvas() {\n        return this._canvas;\n    }\n\n    get gl() {\n        return this._gl;\n    }\n\n    get renderProgram() {\n        return this._renderProgram;\n    }\n\n    get backgroundColor() {\n        return this._backgroundColor;\n    }\n\n    set backgroundColor(value: Color32) {\n        this._backgroundColor = value;\n        this._canvas.style.background = value.toHexString();\n    }\n}\n", "import { Camera } from \"../cameras/Camera\";\nimport { Matrix3 } from \"../math/Matrix3\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { Vector3 } from \"../math/Vector3\";\n\nclass OrbitControls {\n    minAngle: number = -90;\n    maxAngle: number = 90;\n    minZoom: number = 0.1;\n    maxZoom: number = 30;\n    orbitSpeed: number = 1;\n    panSpeed: number = 1;\n    zoomSpeed: number = 1;\n    dampening: number = 0.12;\n    setCameraTarget: (newTarget: Vector3) => void = () => {};\n    update: () => void;\n    dispose: () => void;\n\n    constructor(\n        camera: Camera,\n        canvas: HTMLElement,\n        alpha: number = 0.5,\n        beta: number = 0.5,\n        radius: number = 5,\n        enableKeyboardControls: boolean = true,\n        inputTarget: Vector3 = new Vector3(),\n    ) {\n        let target = inputTarget.clone();\n\n        let desiredTarget = target.clone();\n        let desiredAlpha = alpha;\n        let desiredBeta = beta;\n        let desiredRadius = radius;\n\n        let dragging = false;\n        let panning = false;\n        let lastDist = 0;\n        let lastX = 0;\n        let lastY = 0;\n\n        const keys: { [key: string]: boolean } = {};\n\n        let isUpdatingCamera = false;\n\n        const onCameraChange = () => {\n            if (isUpdatingCamera) return;\n\n            const eulerRotation = camera.rotation.toEuler();\n            desiredAlpha = -eulerRotation.y;\n            desiredBeta = -eulerRotation.x;\n\n            const x = camera.position.x - desiredRadius * Math.sin(desiredAlpha) * Math.cos(desiredBeta);\n            const y = camera.position.y + desiredRadius * Math.sin(desiredBeta);\n            const z = camera.position.z + desiredRadius * Math.cos(desiredAlpha) * Math.cos(desiredBeta);\n\n            desiredTarget = new Vector3(x, y, z);\n        };\n\n        camera.addEventListener(\"objectChanged\", onCameraChange);\n\n        this.setCameraTarget = (newTarget: Vector3) => {\n            const dx = newTarget.x - camera.position.x;\n            const dy = newTarget.y - camera.position.y;\n            const dz = newTarget.z - camera.position.z;\n            desiredRadius = Math.sqrt(dx * dx + dy * dy + dz * dz);\n            desiredBeta = Math.atan2(dy, Math.sqrt(dx * dx + dz * dz));\n            desiredAlpha = -Math.atan2(dx, dz);\n            desiredTarget = new Vector3(newTarget.x, newTarget.y, newTarget.z);\n        };\n\n        const computeZoomNorm = () => {\n            return 0.1 + (0.9 * (desiredRadius - this.minZoom)) / (this.maxZoom - this.minZoom);\n        };\n\n        const onKeyDown = (e: KeyboardEvent) => {\n            keys[e.code] = true;\n            // Map arrow keys to WASD keys\n            if (e.code === \"ArrowUp\") keys[\"KeyW\"] = true;\n            if (e.code === \"ArrowDown\") keys[\"KeyS\"] = true;\n            if (e.code === \"ArrowLeft\") keys[\"KeyA\"] = true;\n            if (e.code === \"ArrowRight\") keys[\"KeyD\"] = true;\n        };\n\n        const onKeyUp = (e: KeyboardEvent) => {\n            keys[e.code] = false; // Map arrow keys to WASD keys\n            if (e.code === \"ArrowUp\") keys[\"KeyW\"] = false;\n            if (e.code === \"ArrowDown\") keys[\"KeyS\"] = false;\n            if (e.code === \"ArrowLeft\") keys[\"KeyA\"] = false;\n            if (e.code === \"ArrowRight\") keys[\"KeyD\"] = false;\n        };\n\n        const onMouseDown = (e: MouseEvent) => {\n            preventDefault(e);\n\n            dragging = true;\n            panning = e.button === 2;\n            lastX = e.clientX;\n            lastY = e.clientY;\n            window.addEventListener(\"mouseup\", onMouseUp);\n        };\n\n        const onMouseUp = (e: MouseEvent) => {\n            preventDefault(e);\n\n            dragging = false;\n            panning = false;\n            window.removeEventListener(\"mouseup\", onMouseUp);\n        };\n\n        const onMouseMove = (e: MouseEvent) => {\n            preventDefault(e);\n\n            if (!dragging || !camera) return;\n\n            const dx = e.clientX - lastX;\n            const dy = e.clientY - lastY;\n\n            if (panning) {\n                const zoomNorm = computeZoomNorm();\n                const panX = -dx * this.panSpeed * 0.01 * zoomNorm;\n                const panY = -dy * this.panSpeed * 0.01 * zoomNorm;\n                const R = Matrix3.RotationFromQuaternion(camera.rotation).buffer;\n                const right = new Vector3(R[0], R[3], R[6]);\n                const up = new Vector3(R[1], R[4], R[7]);\n                desiredTarget = desiredTarget.add(right.multiply(panX));\n                desiredTarget = desiredTarget.add(up.multiply(panY));\n            } else {\n                desiredAlpha -= dx * this.orbitSpeed * 0.003;\n                desiredBeta += dy * this.orbitSpeed * 0.003;\n                desiredBeta = Math.min(\n                    Math.max(desiredBeta, (this.minAngle * Math.PI) / 180),\n                    (this.maxAngle * Math.PI) / 180,\n                );\n            }\n\n            lastX = e.clientX;\n            lastY = e.clientY;\n        };\n\n        const onWheel = (e: WheelEvent) => {\n            preventDefault(e);\n\n            const zoomNorm = computeZoomNorm();\n            desiredRadius += e.deltaY * this.zoomSpeed * 0.025 * zoomNorm;\n            desiredRadius = Math.min(Math.max(desiredRadius, this.minZoom), this.maxZoom);\n        };\n\n        const onTouchStart = (e: TouchEvent) => {\n            preventDefault(e);\n\n            if (e.touches.length === 1) {\n                dragging = true;\n                panning = false;\n                lastX = e.touches[0].clientX;\n                lastY = e.touches[0].clientY;\n                lastDist = 0;\n            } else if (e.touches.length === 2) {\n                dragging = true;\n                panning = true;\n                lastX = (e.touches[0].clientX + e.touches[1].clientX) / 2;\n                lastY = (e.touches[0].clientY + e.touches[1].clientY) / 2;\n                const distX = e.touches[0].clientX - e.touches[1].clientX;\n                const distY = e.touches[0].clientY - e.touches[1].clientY;\n                lastDist = Math.sqrt(distX * distX + distY * distY);\n            }\n        };\n\n        const onTouchEnd = (e: TouchEvent) => {\n            preventDefault(e);\n\n            dragging = false;\n            panning = false;\n        };\n\n        const onTouchMove = (e: TouchEvent) => {\n            preventDefault(e);\n\n            if (!dragging || !camera) return;\n\n            if (panning) {\n                const zoomNorm = computeZoomNorm();\n\n                const distX = e.touches[0].clientX - e.touches[1].clientX;\n                const distY = e.touches[0].clientY - e.touches[1].clientY;\n                const dist = Math.sqrt(distX * distX + distY * distY);\n                const delta = lastDist - dist;\n                desiredRadius += delta * this.zoomSpeed * 0.1 * zoomNorm;\n                desiredRadius = Math.min(Math.max(desiredRadius, this.minZoom), this.maxZoom);\n                lastDist = dist;\n\n                const touchX = (e.touches[0].clientX + e.touches[1].clientX) / 2;\n                const touchY = (e.touches[0].clientY + e.touches[1].clientY) / 2;\n                const dx = touchX - lastX;\n                const dy = touchY - lastY;\n                const R = Matrix3.RotationFromQuaternion(camera.rotation).buffer;\n                const right = new Vector3(R[0], R[3], R[6]);\n                const up = new Vector3(R[1], R[4], R[7]);\n                desiredTarget = desiredTarget.add(right.multiply(-dx * this.panSpeed * 0.025 * zoomNorm));\n                desiredTarget = desiredTarget.add(up.multiply(-dy * this.panSpeed * 0.025 * zoomNorm));\n                lastX = touchX;\n                lastY = touchY;\n            } else {\n                const dx = e.touches[0].clientX - lastX;\n                const dy = e.touches[0].clientY - lastY;\n\n                desiredAlpha -= dx * this.orbitSpeed * 0.003;\n                desiredBeta += dy * this.orbitSpeed * 0.003;\n                desiredBeta = Math.min(\n                    Math.max(desiredBeta, (this.minAngle * Math.PI) / 180),\n                    (this.maxAngle * Math.PI) / 180,\n                );\n\n                lastX = e.touches[0].clientX;\n                lastY = e.touches[0].clientY;\n            }\n        };\n\n        const lerp = (a: number, b: number, t: number) => {\n            return (1 - t) * a + t * b;\n        };\n\n        this.update = () => {\n            isUpdatingCamera = true;\n\n            alpha = lerp(alpha, desiredAlpha, this.dampening);\n            beta = lerp(beta, desiredBeta, this.dampening);\n            radius = lerp(radius, desiredRadius, this.dampening);\n            target = target.lerp(desiredTarget, this.dampening);\n\n            const x = target.x + radius * Math.sin(alpha) * Math.cos(beta);\n            const y = target.y - radius * Math.sin(beta);\n            const z = target.z - radius * Math.cos(alpha) * Math.cos(beta);\n            camera.position = new Vector3(x, y, z);\n\n            const direction = target.subtract(camera.position).normalize();\n            const rx = Math.asin(-direction.y);\n            const ry = Math.atan2(direction.x, direction.z);\n            camera.rotation = Quaternion.FromEuler(new Vector3(rx, ry, 0));\n\n            const moveSpeed = 0.025;\n            const rotateSpeed = 0.01;\n\n            const R = Matrix3.RotationFromQuaternion(camera.rotation).buffer;\n            const forward = new Vector3(-R[2], -R[5], -R[8]);\n            const right = new Vector3(R[0], R[3], R[6]);\n\n            if (keys[\"KeyS\"]) desiredTarget = desiredTarget.add(forward.multiply(moveSpeed));\n            if (keys[\"KeyW\"]) desiredTarget = desiredTarget.subtract(forward.multiply(moveSpeed));\n            if (keys[\"KeyA\"]) desiredTarget = desiredTarget.subtract(right.multiply(moveSpeed));\n            if (keys[\"KeyD\"]) desiredTarget = desiredTarget.add(right.multiply(moveSpeed));\n\n            // Add rotation with 'e' and 'q' for horizontal rotation\n            if (keys[\"KeyE\"]) desiredAlpha += rotateSpeed;\n            if (keys[\"KeyQ\"]) desiredAlpha -= rotateSpeed;\n\n            // Add rotation with 'r' and 'f' for vertical rotation\n            if (keys[\"KeyR\"]) desiredBeta += rotateSpeed;\n            if (keys[\"KeyF\"]) desiredBeta -= rotateSpeed;\n\n            isUpdatingCamera = false;\n        };\n\n        const preventDefault = (e: Event) => {\n            e.preventDefault();\n            e.stopPropagation();\n        };\n\n        this.dispose = () => {\n            canvas.removeEventListener(\"dragenter\", preventDefault);\n            canvas.removeEventListener(\"dragover\", preventDefault);\n            canvas.removeEventListener(\"dragleave\", preventDefault);\n            canvas.removeEventListener(\"contextmenu\", preventDefault);\n\n            canvas.removeEventListener(\"mousedown\", onMouseDown);\n            canvas.removeEventListener(\"mousemove\", onMouseMove);\n            canvas.removeEventListener(\"wheel\", onWheel);\n\n            canvas.removeEventListener(\"touchstart\", onTouchStart);\n            canvas.removeEventListener(\"touchend\", onTouchEnd);\n            canvas.removeEventListener(\"touchmove\", onTouchMove);\n\n            if (enableKeyboardControls) {\n                window.removeEventListener(\"keydown\", onKeyDown);\n                window.removeEventListener(\"keyup\", onKeyUp);\n            }\n        };\n\n        if (enableKeyboardControls) {\n            window.addEventListener(\"keydown\", onKeyDown);\n            window.addEventListener(\"keyup\", onKeyUp);\n        }\n\n        canvas.addEventListener(\"dragenter\", preventDefault);\n        canvas.addEventListener(\"dragover\", preventDefault);\n        canvas.addEventListener(\"dragleave\", preventDefault);\n        canvas.addEventListener(\"contextmenu\", preventDefault);\n\n        canvas.addEventListener(\"mousedown\", onMouseDown);\n        canvas.addEventListener(\"mousemove\", onMouseMove);\n        canvas.addEventListener(\"wheel\", onWheel);\n\n        canvas.addEventListener(\"touchstart\", onTouchStart);\n        canvas.addEventListener(\"touchend\", onTouchEnd);\n        canvas.addEventListener(\"touchmove\", onTouchMove);\n\n        this.update();\n    }\n}\n\nexport { OrbitControls };\n", "import { Vector3 } from \"./Vector3\";\n\nclass Plane {\n    public readonly normal: Vector3;\n    public readonly point: Vector3;\n\n    constructor(normal: Vector3, point: Vector3) {\n        this.normal = normal;\n        this.point = point;\n    }\n\n    intersect(origin: Vector3, direction: Vector3): Vector3 | null {\n        const denominator = this.normal.dot(direction);\n\n        if (Math.abs(denominator) < 0.0001) {\n            return null;\n        }\n\n        const t = this.normal.dot(this.point.subtract(origin)) / denominator;\n\n        if (t < 0) {\n            return null;\n        }\n\n        return origin.add(direction.multiply(t));\n    }\n}\n\nexport { Plane };\n", "import { ShaderProgram } from \"../programs/ShaderProgram\";\n\nclass ShaderPass {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    initialize(program: ShaderProgram) {}\n    render() {}\n    dispose() {}\n}\n\nexport { ShaderPass };\n", "\nvar loadWasm = (() => {\n  var _scriptDir = import.meta.url;\n  \n  return (\nfunction(moduleArg = {}) {\n\nvar Module=moduleArg;var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise((resolve,reject)=>{readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=true;var ENVIRONMENT_IS_WORKER=false;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary;if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.error.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];if(typeof WebAssembly!=\"object\"){abort(\"no native wasm support detected\")}function intArrayFromBase64(s){var decoded=atob(s);var bytes=new Uint8Array(decoded.length);for(var i=0;i<decoded.length;++i){bytes[i]=decoded.charCodeAt(i)}return bytes}function tryParseAsDataURI(filename){if(!isDataURI(filename)){return}return intArrayFromBase64(filename.slice(dataURIPrefix.length))}var wasmMemory;var ABORT=false;var EXITSTATUS;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateMemoryViews(){var b=wasmMemory.buffer;Module[\"HEAP8\"]=HEAP8=new Int8Array(b);Module[\"HEAP16\"]=HEAP16=new Int16Array(b);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(b);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(b);Module[\"HEAP32\"]=HEAP32=new Int32Array(b);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(b);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(b);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(b)}var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;Module[\"monitorRunDependencies\"]?.(runDependencies)}function removeRunDependency(id){runDependencies--;Module[\"monitorRunDependencies\"]?.(runDependencies);if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){Module[\"onAbort\"]?.(what);what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";var isDataURI=filename=>filename.startsWith(dataURIPrefix);var wasmBinaryFile;wasmBinaryFile=\"data:application/octet-stream;base64,\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinarySync(file){if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}var binary=tryParseAsDataURI(file);if(binary){return binary}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}function getBinaryPromise(binaryFile){return Promise.resolve().then(()=>getBinarySync(binaryFile))}function instantiateArrayBuffer(binaryFile,imports,receiver){return getBinaryPromise(binaryFile).then(binary=>WebAssembly.instantiate(binary,imports)).then(instance=>instance).then(receiver,reason=>{err(`failed to asynchronously prepare wasm: ${reason}`);abort(reason)})}function instantiateAsync(binary,binaryFile,imports,callback){return instantiateArrayBuffer(binaryFile,imports,callback)}function createWasm(){var info={\"a\":wasmImports};function receiveInstance(instance,module){wasmExports=instance.exports;wasmMemory=wasmExports[\"k\"];updateMemoryViews();addOnInit(wasmExports[\"l\"]);removeRunDependency(\"wasm-instantiate\");return wasmExports}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){err(`Module.instantiateWasm callback failed with error: ${e}`);readyPromiseReject(e)}}instantiateAsync(wasmBinary,wasmBinaryFile,info,receiveInstantiationResult).catch(readyPromiseReject);return{}}var callRuntimeCallbacks=callbacks=>{while(callbacks.length>0){callbacks.shift()(Module)}};var noExitRuntime=Module[\"noExitRuntime\"]||true;var __embind_register_bigint=(primitiveType,name,size,minRange,maxRange)=>{};var embind_init_charCodes=()=>{var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes};var embind_charCodes;var readLatin1String=ptr=>{var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret};var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var BindingError;var throwBindingError=message=>{throw new BindingError(message)};var InternalError;function sharedRegisterType(rawType,registeredInstance,options={}){var name=registeredInstance.name;if(!rawType){throwBindingError(`type \"${name}\" must have a positive integer typeid pointer`)}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(`Cannot register type '${name}' twice`)}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(cb=>cb())}}function registerType(rawType,registeredInstance,options={}){if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}return sharedRegisterType(rawType,registeredInstance,options)}var GenericWireTypeSize=8;var __embind_register_bool=(rawType,name,trueValue,falseValue)=>{name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(wt){return!!wt},\"toWireType\":function(destructors,o){return o?trueValue:falseValue},\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":function(pointer){return this[\"fromWireType\"](HEAPU8[pointer])},destructorFunction:null})};function handleAllocatorInit(){Object.assign(HandleAllocator.prototype,{get(id){return this.allocated[id]},has(id){return this.allocated[id]!==undefined},allocate(handle){var id=this.freelist.pop()||this.allocated.length;this.allocated[id]=handle;return id},free(id){this.allocated[id]=undefined;this.freelist.push(id)}})}function HandleAllocator(){this.allocated=[undefined];this.freelist=[]}var emval_handles=new HandleAllocator;var __emval_decref=handle=>{if(handle>=emval_handles.reserved&&0===--emval_handles.get(handle).refcount){emval_handles.free(handle)}};var count_emval_handles=()=>{var count=0;for(var i=emval_handles.reserved;i<emval_handles.allocated.length;++i){if(emval_handles.allocated[i]!==undefined){++count}}return count};var init_emval=()=>{emval_handles.allocated.push({value:undefined},{value:null},{value:true},{value:false});emval_handles.reserved=emval_handles.allocated.length;Module[\"count_emval_handles\"]=count_emval_handles};var Emval={toValue:handle=>{if(!handle){throwBindingError(\"Cannot use deleted val. handle = \"+handle)}return emval_handles.get(handle).value},toHandle:value=>{switch(value){case undefined:return 1;case null:return 2;case true:return 3;case false:return 4;default:{return emval_handles.allocate({refcount:1,value:value})}}}};function simpleReadValueFromPointer(pointer){return this[\"fromWireType\"](HEAP32[pointer>>2])}var __embind_register_emval=(rawType,name)=>{name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":handle=>{var rv=Emval.toValue(handle);__emval_decref(handle);return rv},\"toWireType\":(destructors,value)=>Emval.toHandle(value),\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:null})};var floatReadValueFromPointer=(name,width)=>{switch(width){case 4:return function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])};case 8:return function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])};default:throw new TypeError(`invalid float width (${width}): ${name}`)}};var __embind_register_float=(rawType,name,size)=>{name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":value=>value,\"toWireType\":(destructors,value)=>value,\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":floatReadValueFromPointer(name,size),destructorFunction:null})};var integerReadValueFromPointer=(name,width,signed)=>{switch(width){case 1:return signed?pointer=>HEAP8[pointer>>0]:pointer=>HEAPU8[pointer>>0];case 2:return signed?pointer=>HEAP16[pointer>>1]:pointer=>HEAPU16[pointer>>1];case 4:return signed?pointer=>HEAP32[pointer>>2]:pointer=>HEAPU32[pointer>>2];default:throw new TypeError(`invalid integer width (${width}): ${name}`)}};var __embind_register_integer=(primitiveType,name,size,minRange,maxRange)=>{name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var fromWireType=value=>value;if(minRange===0){var bitshift=32-8*size;fromWireType=value=>value<<bitshift>>>bitshift}var isUnsignedType=name.includes(\"unsigned\");var checkAssertions=(value,toTypeName)=>{};var toWireType;if(isUnsignedType){toWireType=function(destructors,value){checkAssertions(value,this.name);return value>>>0}}else{toWireType=function(destructors,value){checkAssertions(value,this.name);return value}}registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":toWireType,\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":integerReadValueFromPointer(name,size,minRange!==0),destructorFunction:null})};var __embind_register_memory_view=(rawType,dataTypeIndex,name)=>{var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){var size=HEAPU32[handle>>2];var data=HEAPU32[handle+4>>2];return new TA(HEAP8.buffer,data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})};function readPointer(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>2])}var stringToUTF8Array=(str,heap,outIdx,maxBytesToWrite)=>{if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx};var stringToUTF8=(str,outPtr,maxBytesToWrite)=>stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite);var lengthBytesUTF8=str=>{var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len};var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;var UTF8ArrayToString=(heapOrArray,idx,maxBytesToRead)=>{var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str};var UTF8ToString=(ptr,maxBytesToRead)=>ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\";var __embind_register_std_string=(rawType,name)=>{name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\"(value){var length=HEAPU32[value>>2];var payload=value+4;var str;if(stdStringIsUTF8){var decodeStartPtr=payload;for(var i=0;i<=length;++i){var currentBytePtr=payload+i;if(i==length||HEAPU8[currentBytePtr]==0){var maxRead=currentBytePtr-decodeStartPtr;var stringSegment=UTF8ToString(decodeStartPtr,maxRead);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[payload+i])}str=a.join(\"\")}_free(value);return str},\"toWireType\"(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var length;var valueIsOfTypeString=typeof value==\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){length=lengthBytesUTF8(value)}else{length=value.length}var base=_malloc(4+length+1);var ptr=base+4;HEAPU32[base>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+i]=value[i]}}}if(destructors!==null){destructors.push(_free,base)}return base},\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":readPointer,destructorFunction(ptr){_free(ptr)}})};var UTF16Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;var UTF16ToString=(ptr,maxBytesToRead)=>{var endPtr=ptr;var idx=endPtr>>1;var maxIdx=idx+maxBytesToRead/2;while(!(idx>=maxIdx)&&HEAPU16[idx])++idx;endPtr=idx<<1;if(endPtr-ptr>32&&UTF16Decoder)return UTF16Decoder.decode(HEAPU8.subarray(ptr,endPtr));var str=\"\";for(var i=0;!(i>=maxBytesToRead/2);++i){var codeUnit=HEAP16[ptr+i*2>>1];if(codeUnit==0)break;str+=String.fromCharCode(codeUnit)}return str};var stringToUTF16=(str,outPtr,maxBytesToWrite)=>{maxBytesToWrite??=2147483647;if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>1]=codeUnit;outPtr+=2}HEAP16[outPtr>>1]=0;return outPtr-startPtr};var lengthBytesUTF16=str=>str.length*2;var UTF32ToString=(ptr,maxBytesToRead)=>{var i=0;var str=\"\";while(!(i>=maxBytesToRead/4)){var utf32=HEAP32[ptr+i*4>>2];if(utf32==0)break;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}return str};var stringToUTF32=(str,outPtr,maxBytesToWrite)=>{maxBytesToWrite??=2147483647;if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr>>2]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}HEAP32[outPtr>>2]=0;return outPtr-startPtr};var lengthBytesUTF32=str=>{var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len};var __embind_register_std_wstring=(rawType,charSize,name)=>{name=readLatin1String(name);var decodeString,encodeString,getHeap,lengthBytesUTF,shift;if(charSize===2){decodeString=UTF16ToString;encodeString=stringToUTF16;lengthBytesUTF=lengthBytesUTF16;getHeap=()=>HEAPU16;shift=1}else if(charSize===4){decodeString=UTF32ToString;encodeString=stringToUTF32;lengthBytesUTF=lengthBytesUTF32;getHeap=()=>HEAPU32;shift=2}registerType(rawType,{name:name,\"fromWireType\":value=>{var length=HEAPU32[value>>2];var HEAP=getHeap();var str;var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i*charSize;if(i==length||HEAP[currentBytePtr>>shift]==0){var maxReadBytes=currentBytePtr-decodeStartPtr;var stringSegment=decodeString(decodeStartPtr,maxReadBytes);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+charSize}}_free(value);return str},\"toWireType\":(destructors,value)=>{if(!(typeof value==\"string\")){throwBindingError(`Cannot pass non-string to C++ string type ${name}`)}var length=lengthBytesUTF(value);var ptr=_malloc(4+length+charSize);HEAPU32[ptr>>2]=length>>shift;encodeString(value,ptr+4,length+charSize);if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction(ptr){_free(ptr)}})};var __embind_register_void=(rawType,name)=>{name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":()=>undefined,\"toWireType\":(destructors,o)=>undefined})};var getHeapMax=()=>2147483648;var growMemory=size=>{var b=wasmMemory.buffer;var pages=(size-b.byteLength+65535)/65536;try{wasmMemory.grow(pages);updateMemoryViews();return 1}catch(e){}};var _emscripten_resize_heap=requestedSize=>{var oldSize=HEAPU8.length;requestedSize>>>=0;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}var alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=growMemory(newSize);if(replacement){return true}}return false};embind_init_charCodes();BindingError=Module[\"BindingError\"]=class BindingError extends Error{constructor(message){super(message);this.name=\"BindingError\"}};InternalError=Module[\"InternalError\"]=class InternalError extends Error{constructor(message){super(message);this.name=\"InternalError\"}};handleAllocatorInit();init_emval();var wasmImports={f:__embind_register_bigint,i:__embind_register_bool,h:__embind_register_emval,e:__embind_register_float,b:__embind_register_integer,a:__embind_register_memory_view,d:__embind_register_std_string,c:__embind_register_std_wstring,j:__embind_register_void,g:_emscripten_resize_heap};var wasmExports=createWasm();var ___wasm_call_ctors=()=>(___wasm_call_ctors=wasmExports[\"l\"])();var _evaluate=Module[\"_evaluate\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12)=>(_evaluate=Module[\"_evaluate\"]=wasmExports[\"m\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12);var ___errno_location=()=>(___errno_location=wasmExports[\"__errno_location\"])();var _malloc=Module[\"_malloc\"]=a0=>(_malloc=Module[\"_malloc\"]=wasmExports[\"o\"])(a0);var _free=Module[\"_free\"]=a0=>(_free=Module[\"_free\"]=wasmExports[\"p\"])(a0);var ___cxa_is_pointer_type=a0=>(___cxa_is_pointer_type=wasmExports[\"__cxa_is_pointer_type\"])(a0);var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(){if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\n\n\n  return moduleArg.ready\n}\n);\n})();\n;\nexport default loadWasm;", "import { Splat } from \"../../../splats/Splat\";\nimport { RenderProgram } from \"../programs/RenderProgram\";\n\nimport loadWasm from \"../../../wasm/intersect\";\n\nclass IntersectionTester {\n    testPoint: (x: number, y: number) => Splat | null;\n\n    constructor(renderProgram: RenderProgram) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let wasmModule: any;\n\n        const initWasm = async () => {\n            wasmModule = await loadWasm();\n        };\n\n        initWasm();\n\n        let allocatedVertexCount: number = 0;\n        let allocatedTransformCount: number = 0;\n\n        let viewPtr: number;\n        let transformsPtr: number;\n        let transformIndicesPtr: number;\n        let positionsPtr: number;\n        let rotationsPtr: number;\n        let scalesPtr: number;\n        let depthIndexPtr: number;\n        let chunksPtr: number;\n        let originPtr: number;\n        let directionPtr: number;\n        let resultPtr: number;\n\n        const allocateVertices = (vertexCount: number) => {\n            if (vertexCount > allocatedVertexCount) {\n                if (allocatedVertexCount > 0) {\n                    wasmModule._free(viewPtr);\n                    wasmModule._free(transformIndicesPtr);\n                    wasmModule._free(positionsPtr);\n                    wasmModule._free(rotationsPtr);\n                    wasmModule._free(scalesPtr);\n                    wasmModule._free(depthIndexPtr);\n                    wasmModule._free(chunksPtr);\n                    wasmModule._free(originPtr);\n                    wasmModule._free(directionPtr);\n                    wasmModule._free(resultPtr);\n                }\n\n                allocatedVertexCount = vertexCount;\n\n                viewPtr = wasmModule._malloc(16 * 4);\n                transformIndicesPtr = wasmModule._malloc(allocatedVertexCount * 4);\n                positionsPtr = wasmModule._malloc(3 * allocatedVertexCount * 4);\n                rotationsPtr = wasmModule._malloc(4 * allocatedVertexCount * 4);\n                scalesPtr = wasmModule._malloc(3 * allocatedVertexCount * 4);\n                depthIndexPtr = wasmModule._malloc(allocatedVertexCount * 4);\n                chunksPtr = wasmModule._malloc(allocatedVertexCount);\n                originPtr = wasmModule._malloc(3 * 4);\n                directionPtr = wasmModule._malloc(3 * 4);\n                resultPtr = wasmModule._malloc(4);\n            }\n        };\n\n        const allocateTransforms = (transformCount: number) => {\n            if (transformCount > allocatedTransformCount) {\n                if (allocatedTransformCount > 0) {\n                    wasmModule._free(transformsPtr);\n                }\n\n                allocatedTransformCount = transformCount;\n\n                transformsPtr = wasmModule._malloc(20 * allocatedTransformCount * 4);\n            }\n        };\n\n        this.testPoint = (x: number, y: number) => {\n            if (!wasmModule) {\n                throw new Error(\"Wasm module not loaded\");\n            }\n\n            if (!renderProgram.camera) {\n                throw new Error(\"Camera not set\");\n            }\n\n            if (!renderProgram.renderData || !renderProgram.depthIndex || !renderProgram.chunks) {\n                throw new Error(\"Render data not set\");\n            }\n\n            const renderData = renderProgram.renderData;\n            const depthIndex = renderProgram.depthIndex;\n            const chunks = renderProgram.chunks;\n\n            const targetAllocatedVertexCount = Math.pow(2, Math.ceil(Math.log2(renderData.vertexCount)));\n            allocateVertices(targetAllocatedVertexCount);\n\n            const targetAllocatedTransformCount = Math.pow(2, Math.ceil(Math.log2(renderData.transforms.length / 20)));\n            allocateTransforms(targetAllocatedTransformCount);\n\n            const normalizedX = (x + 1) / 2;\n            const normalizedY = (y + 1) / 2;\n            const chunk = Math.floor(normalizedX * 15) + Math.floor(normalizedY * 15) * 15;\n\n            const camera = renderProgram.camera;\n            const ray = camera.screenPointToRay(x, y);\n\n            wasmModule.HEAPF32.set(camera.data.viewMatrix.buffer, viewPtr / 4);\n            wasmModule.HEAPU32.set(renderData.transformIndices, transformIndicesPtr / 4);\n            wasmModule.HEAPF32.set(renderData.positions, positionsPtr / 4);\n            wasmModule.HEAPF32.set(renderData.rotations, rotationsPtr / 4);\n            wasmModule.HEAPF32.set(renderData.scales, scalesPtr / 4);\n            wasmModule.HEAPU32.set(depthIndex, depthIndexPtr / 4);\n            wasmModule.HEAPU8.set(chunks, chunksPtr);\n            wasmModule.HEAPF32.set(camera.position.flat(), originPtr / 4);\n            wasmModule.HEAPF32.set(ray.flat(), directionPtr / 4);\n            wasmModule.HEAPF32.set(renderData.transforms, transformsPtr / 4);\n\n            wasmModule._evaluate(\n                viewPtr,\n                transformsPtr,\n                transformIndicesPtr,\n                positionsPtr,\n                rotationsPtr,\n                scalesPtr,\n                depthIndexPtr,\n                chunksPtr,\n                renderData.vertexCount,\n                chunk,\n                originPtr,\n                directionPtr,\n                resultPtr,\n            );\n\n            const result = wasmModule.HEAPU32[resultPtr / 4];\n            if (result !== 0xffffffff) {\n                const splat = renderData.getSplat(result) as Splat;\n                return splat;\n            }\n\n            return null;\n        };\n    }\n}\n\nexport { IntersectionTester };\n"],
  "mappings": "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,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAC/GA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IACjHA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAClHA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAChHA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,IAAMA,GAAE,EAAA,IAAMA,GAAE,CAAA,IAAKA,GAAE,CAAA,IAAKA,GAAE,EAAA,I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",
  "names": ["Vector3", "x", "y", "z", "this", "v", "buffer", "t", "magnitude", "Math", "sqrt", "normalize", "length", "flat", "clone", "toString", "join", "value", "Quaternion", "w", "q", "l", "w1", "x1", "y1", "z1", "w2", "x2", "y2", "z2", "inverse", "vecQuat", "conjugate", "rotatedQuat", "multiply", "e", "halfX", "halfY", "halfZ", "cy", "cos", "sy", "sin", "cp", "sp", "cz", "sz", "toEuler", "sinr_cosp", "cosr_cosp", "atan2", "sinp", "abs", "sign", "PI", "asin", "siny_cosp", "cosy_cosp", "matrix", "m", "trace", "s", "axis", "angle", "halfAngle", "EventDispatcher", "constructor", "listeners", "Map", "addEventListener", "type", "listener", "has", "set", "Set", "get", "add", "removeEventListener", "delete", "hasEventListener", "dispatchEvent", "event", "Matrix4", "n11", "n12", "n13", "n14", "n21", "n22", "n23", "n24", "n31", "n32", "n33", "n34", "n41", "n42", "n43", "n44", "i", "a", "b", "determinant", "invert", "det", "Error", "invDet", "position", "rotation", "scale", "xx", "xy", "xz", "yy", "yz", "zz", "wx", "wy", "wz", "sx", "ObjectAddedEvent", "Event", "object", "super", "ObjectRemovedEvent", "ObjectChangedEvent", "Object3D", "positionChanged", "rotationChanged", "scaleChanged", "_position", "_rotation", "_scale", "_transform", "_changeEvent", "update", "applyPosition", "applyRotation", "applyScale", "_updateMatrix", "Compose", "equals", "forward", "apply", "transform", "Matrix3", "cx", "SplatData", "vertexCount", "positions", "rotations", "scales", "colors", "changed", "detached", "_vertexCount", "_positions", "Float32Array", "_rotations", "_scales", "_colors", "Uint8Array", "_selection", "translate", "translation", "rotate", "R", "RotationFromQuaternion", "currentRotation", "newRot", "serialize", "data", "RowLength", "f_buffer", "u_buffer", "reattach", "selection", "console", "assert", "byteLength", "Splat", "splat", "undefined", "selectedChanged", "_selected", "_data", "name", "document", "now", "Date", "getFullYear", "getMonth", "getDate", "blob", "Blob", "link", "createElement", "download", "href", "URL", "createObjectURL", "click", "selected", "CameraData", "_fx", "_fy", "_near", "_far", "_width", "_height", "_projectionMatrix", "_viewMatrix", "_viewProj", "_updateProjectionMatrix", "fx", "width", "fy", "height", "far", "near", "projectionMatrix", "viewMatrix", "setSize", "viewProj", "Vector4", "Camera", "camera", "screenPointToRay", "clipSpaceCoords", "inverseProjectionMatrix", "cameraSpaceCoords", "inverseViewMatrix", "worldSpaceCoords", "subtract", "Scene", "_objects", "addObject", "objects", "push", "removeObject", "index", "indexOf", "splice", "findObject", "predicate", "findObjectOfType", "reset", "objectsToRemove", "slice", "buffers", "offset", "Loader", "url", "scene", "onProgress", "useCache", "req", "fetch", "mode", "credentials", "cache", "status", "reader", "body", "getReader", "contentLength", "parseInt", "headers", "bytesRead", "done", "read", "Deserialize", "file", "FileReader", "onload", "target", "result", "onprogress", "loaded", "total", "readAsArrayBuffer", "Promise", "resolve", "onloadend", "PLYLoader", "format", "plyData", "_ParsePLYBuffer", "inputBuffer", "ubuf", "headerText", "TextDecoder", "decode", "header_end", "header_end_index", "exec", "rowOffset", "offsets", "double", "int", "uint", "float", "short", "ushort", "uchar", "properties", "prop", "split", "filter", "k", "startsWith", "_p", "dataView", "DataView", "ArrayBuffer", "q_polycam", "FromEuler", "rgba", "Uint8ClampedArray", "rot", "r0", "r1", "r2", "r3", "forEach", "property", "getFloat32", "getInt32", "exp", "SH_C0", "temp", "A", "Q", "F", "B", "U", "d", "ShaderProgram", "renderer", "passes", "_scene", "_camera", "_started", "_initialized", "_renderer", "gl", "_program", "createProgram", "_passes", "vertexShader", "createShader", "VERTEX_SHADER", "shaderSource", "_getVertexSource", "compileShader", "getShaderParameter", "COMPILE_STATUS", "error", "getShaderInfoLog", "fragmentShader", "FRAGMENT_SHADER", "_getFragmentSource", "attachShader", "program", "linkProgram", "getProgramParameter", "LINK_STATUS", "getProgramInfoLog", "resize", "useProgram", "_resize", "initialize", "_initialize", "pass", "render", "dispose", "_render", "_dispose", "started", "loadWasm", "moduleArg", "readyPromiseResolve", "readyPromiseReject", "Module", "reject", "readBinary", "moduleOverrides", "Object", "assign", "scriptDirectory", "self", "location", "substr", "replace", "lastIndexOf", "xhr", "XMLHttpRequest", "open", "responseType", "send", "response", "log", "bind", "wasmBinary", "wasmMemory", "err", "tryParseAsDataURI", "filename", "isDataURI", "decoded", "atob", "bytes", "charCodeAt", "dataURIPrefix", "WebAssembly", "abort", "HEAP8", "HEAPU8", "HEAP16", "HEAPU16", "HEAP32", "HEAPU32", "HEAPF32", "HEAPF64", "ABORT", "updateMemoryViews", "Int8Array", "Int16Array", "Uint16Array", "Int32Array", "Uint32Array", "Float64Array", "__ATPRERUN__", "__ATINIT__", "__ATPOSTRUN__", "runDependencies", "dependenciesFulfilled", "what", "RuntimeError", "wasmBinaryFile", "path", "getBinaryPromise", "binaryFile", "then", "binary", "instantiateAsync", "imports", "callback", "receiver", "instantiate", "instance", "reason", "callRuntimeCallbacks", "callbacks", "shift", "embind_charCodes", "BindingError", "readLatin1String", "ptr", "ret", "c", "awaitingDependencies", "registeredTypes", "throwBindingError", "message", "registerType", "rawType", "registeredInstance", "options", "TypeError", "hasOwnProperty", "ignoreDuplicateRegistrations", "cb", "HandleAllocator", "allocated", "freelist", "emval_handles", "count_emval_handles", "count", "reserved", "Emval", "handle", "allocate", "refcount", "simpleReadValueFromPointer", "pointer", "floatReadValueFromPointer", "integerReadValueFromPointer", "signed", "readPointer", "UTF8Decoder", "UTF8ToString", "maxBytesToRead", "heapOrArray", "idx", "endIdx", "endPtr", "subarray", "str", "u0", "u1", "u2", "String", "fromCharCode", "ch", "UTF16Decoder", "UTF16ToString", "maxIdx", "codeUnit", "stringToUTF16", "outPtr", "maxBytesToWrite", "startPtr", "numCharsToWrite", "lengthBytesUTF16", "UTF32ToString", "utf32", "stringToUTF32", "lengthBytesUTF32", "len", "growMemory", "size", "pages", "grow", "codes", "Array", "embind_init_charCodes", "prototype", "id", "pop", "wasmImports", "f", "primitiveType", "minRange", "maxRange", "trueValue", "falseValue", "fromWireType", "wt", "toWireType", "destructors", "o", "argPackAdvance", "readValueFromPointer", "destructorFunction", "h", "rv", "free", "bitshift", "isUnsignedType", "includes", "dataTypeIndex", "TA", "decodeMemoryView", "stdStringIsUTF8", "payload", "decodeStartPtr", "currentBytePtr", "stringSegment", "_free", "valueIsOfTypeString", "base", "_malloc", "heap", "outIdx", "u", "startIdx", "charCode", "charSize", "decodeString", "encodeString", "getHeap", "lengthBytesUTF", "HEAP", "j", "isVoid", "g", "requestedSize", "oldSize", "maxHeapSize", "multiple", "cutDown", "overGrownHeapSize", "min", "newSize", "max", "wasmExports", "info", "receiveInstance", "module", "exports", "unshift", "_a", "removeRunDependency", "catch", "createWasm", "a0", "a1", "a2", "a3", "a4", "a5", "a6", "a7", "a8", "a9", "a10", "calledRun", "run", "doRun", "postRun", "preRun", "setTimeout", "runCaller", "ready", "RenderData", "dataChanged", "transformsChanged", "_updating", "_dirty", "splatIndex", "_splatIndices", "_offsets", "lookup", "ceil", "_transformsWidth", "_transformsHeight", "_transforms", "_transformIndicesWidth", "_transformIndicesHeight", "_transformIndices", "_worker", "DataWorker", "updateTransform", "wasmModule", "onmessage", "worldPositions", "worldRotations", "worldScales", "async", "initWasm", "buildImmediate", "waitForWasm", "positionsPtr", "rotationsPtr", "scalesPtr", "colorsPtr", "selectionPtr", "dataPtr", "worldPositionsPtr", "worldRotationsPtr", "worldScalesPtr", "_pack", "outData", "build", "serializedSplat", "postMessage", "getSplat", "key", "getLocalIndex", "markDirty", "rebuild", "clear", "terminate", "keys", "transforms", "transformsWidth", "transformsHeight", "transformIndices", "transformIndicesWidth", "transformIndicesHeight", "needsRebuild", "updating", "Color32", "r", "flatNorm", "toHexString", "map", "padStart", "RenderProgram", "_outlineThickness", "_outlineColor", "_renderData", "_depthIndex", "_chunks", "_splatTexture", "canvas", "worker", "u_projection", "u_viewport", "u_focal", "u_view", "u_texture", "u_transforms", "u_transformIndices", "u_outlineThickness", "u_outlineColor", "positionAttribute", "indexAttribute", "transformsTexture", "transformIndicesTexture", "vertexBuffer", "indexBuffer", "getUniformLocation", "uniformMatrix4fv", "uniform2fv", "createWorker", "SortWorker", "depthIndex", "chunks", "bindBuffer", "ARRAY_BUFFER", "bufferData", "STATIC_DRAW", "handleObjectAdded", "handleObjectRemoved", "handleObjectChanged", "uniform1f", "outlineThickness", "uniform4fv", "outlineColor", "createTexture", "uniform1i", "createBuffer", "getAttribLocation", "enableVertexAttribArray", "vertexAttribPointer", "FLOAT", "renderData", "activeTexture", "TEXTURE0", "bindTexture", "TEXTURE_2D", "splatTexture", "texParameteri", "TEXTURE_WRAP_S", "CLAMP_TO_EDGE", "TEXTURE_WRAP_T", "TEXTURE_MIN_FILTER", "NEAREST", "TEXTURE_MAG_FILTER", "texImage2D", "RGBA32UI", "RGBA_INTEGER", "UNSIGNED_INT", "TEXTURE1", "RGBA32F", "RGBA", "TEXTURE2", "R32UI", "RED_INTEGER", "detachedPositions", "detachedTransforms", "detachedTransformIndices", "sortData", "viewport", "clearColor", "COLOR_BUFFER_BIT", "disable", "DEPTH_TEST", "enable", "BLEND", "blendFuncSeparate", "ONE_MINUS_DST_ALPHA", "ONE", "blendEquationSeparate", "FUNC_ADD", "vertexAttribIPointer", "INT", "vertexAttribDivisor", "drawArraysInstanced", "TRIANGLE_FAN", "deleteTexture", "deleteBuffer", "_setOutlineThickness", "_setOutlineColor", "FadeInPass", "speed", "renderProgram", "u_useDepthFade", "u_depthFade", "active", "WebGLRenderer", "optionalCanvas", "optionalRenderPasses", "_backgroundColor", "style", "display", "boxSizing", "margin", "padding", "appendChild", "background", "_canvas", "_gl", "getContext", "antialias", "renderPasses", "_renderProgram", "programs", "clientWidth", "clientHeight", "addProgram", "removeProgram", "backgroundColor", "OrbitControls", "alpha", "beta", "radius", "enableKeyboardControls", "inputTarget", "minAngle", "maxAngle", "minZoom", "maxZoom", "orbitSpeed", "panSpeed", "zoomSpeed", "dampening", "setCameraTarget", "desiredTarget", "desiredAlpha", "desiredBeta", "desiredRadius", "dragging", "panning", "lastDist", "lastX", "lastY", "isUpdatingCamera", "eulerRotation", "newTarget", "dx", "dy", "dz", "computeZoomNorm", "onKeyDown", "code", "onKeyUp", "onMouseDown", "preventDefault", "button", "clientX", "clientY", "window", "onMouseUp", "onMouseMove", "zoomNorm", "panX", "panY", "right", "up", "onWheel", "deltaY", "onTouchStart", "touches", "distX", "distY", "onTouchEnd", "onTouchMove", "dist", "touchX", "touchY", "lerp", "direction", "rx", "ry", "moveSpeed", "rotateSpeed", "stopPropagation", "Plane", "normal", "point", "origin", "denominator", "dot", "ShaderPass", "currentScript", "src", "a11", "a12", "IntersectionTester", "viewPtr", "transformsPtr", "transformIndicesPtr", "depthIndexPtr", "chunksPtr", "originPtr", "directionPtr", "resultPtr", "allocatedVertexCount", "allocatedTransformCount", "testPoint", "targetAllocatedVertexCount", "pow", "log2", "targetAllocatedTransformCount", "transformCount", "normalizedX", "normalizedY", "chunk", "floor", "ray", "_evaluate"]
}
